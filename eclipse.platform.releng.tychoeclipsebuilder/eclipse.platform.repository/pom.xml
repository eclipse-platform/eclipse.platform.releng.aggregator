<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2012, 2014 Eclipse Foundation.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Distribution License v1.0
  which accompanies this distribution, and is available at
  https://www.eclipse.org/org/documents/edl-v10.php

  Contributors:
     Igor Fedorenko - initial implementation
     David Williams - improvements and maintenance
-->
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>eclipse.platform.releng.tychoeclipsebuilder</groupId>
    <artifactId>eclipse.platform.releng.tychoeclipsebuilder</artifactId>
    <version>4.37.0-SNAPSHOT</version>
  </parent>
  <groupId>eclipse.platform.repository</groupId>
  <artifactId>eclipse.platform.repository</artifactId>
  <packaging>eclipse-repository</packaging>
  <dependencies>
    <dependency>
      <groupId>eclipse.platform.releng.tychoeclipsebuilder</groupId>
      <artifactId>eclipse-junit-tests</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>target-platform-configuration</artifactId>
      </plugin>
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-packaging-plugin</artifactId>
        <configuration>
          <format>'${buildId}'</format>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-p2-repository-plugin</artifactId>
        <configuration>
          <includeAllDependencies>true</includeAllDependencies>
          <includeAllSources>true</includeAllSources>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-content-jar</id>
            <phase>package</phase>
            <configuration>
              <target>
                <unjar
                  src="target/repository/content.jar"
                  dest="target/repository" />
                <delete file="target/repository/content.jar" />
                <delete file="target/repository/content.xml.xz" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-extra-iu</id>
            <phase>package</phase>
            <goals>
              <goal>transform</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <transformationSets>
            <transformationSet>
              <dir>target/repository</dir>
              <includes>
                <include>content.xml</include>
              </includes>
              <stylesheet>cp-content.xsl</stylesheet>
            </transformationSet>
          </transformationSets>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-extra-iu</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/repository</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/generated-resources/xml/xslt</directory>
                  <includes>
                    <include>content.xml</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eclipse.tycho.extras</groupId>
        <artifactId>tycho-p2-extras-plugin</artifactId>
        <version>${tycho.version}</version>
        <executions>
          <execution>
            <id>mirror-build</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>mirror</goal>
            </goals>
            <configuration>
              <source>
                <!-- source repositories to mirror from -->
                <repository>
                  <url>${project.baseUri}/../eclipse-junit-tests/target/repository</url>
                  <layout>p2</layout>
                  <!-- supported layouts are "p2-metadata", "p2-artifacts", and "p2" (for joint repositories; default) -->
                </repository>
              </source>
              <!-- starting from here all configuration parameters are optional -->
              <!-- they are only shown here with default values for documentation purpose -->
              <!-- List of IUs to mirror. If omitted, allIUs will be mirrored. -->
              <!-- Omitted IU version element means latest version of the IU -->
              <!--ius>
                    <iu>
                        <id>org.eclipse.rcp.feature.group</id>
                    </iu>
                </ius-->
              <!-- The destination directory to mirror to. -->
              <destination>${project.build.directory}/repository</destination>
              <!-- Whether only strict dependencies should be followed. -->
              <!-- "strict" means perfect version match -->
              <followStrictOnly>false</followStrictOnly>
              <!-- Whether or not to follow optional requirements. -->
              <includeOptional>false</includeOptional>
              <!-- Whether or not to follow non-greedy requirements. -->
              <includeNonGreedy>true</includeNonGreedy>
              <!-- Filter properties. E.g. filter only one platform -->
              <!-- Whether to filter the resulting set of IUs to only -->
              <!-- include the latest version of each IU -->
              <latestVersionOnly>true</latestVersionOnly>
              <!-- don't mirror artifacts, only metadata -->
              <mirrorMetadataOnly>false</mirrorMetadataOnly>
              <!-- whether to compress the content.xml/artifacts.xml -->
              <compress>true</compress>
              <!-- whether to append to the target repository content -->
              <append>true</append>
            </configuration>
          </execution>

          <execution>
            <id>mirror-org.eclipse.platform</id>
            <phase>package</phase>
            <goals>
              <goal>mirror</goal>
            </goals>
            <configuration>
              <source>
                <!-- source repositories to mirror from -->
                <repository>
                  <url>${project.baseUri}/target/repository</url>
                  <layout>p2</layout>
                  <!-- supported layouts are "p2-metadata", "p2-artifacts", and "p2" (for joint repositories; default) -->
                </repository>
              </source>
              <!-- starting from here all configuration parameters are optional -->
              <!-- they are only shown here with default values for documentation purpose -->
              <!-- List of IUs to mirror. If omitted, allIUs will be mirrored. -->
              <!-- Omitted IU version element means latest version of the IU -->
              <ius>
                <iu>
                  <id>org.eclipse.platform.feature.group</id>
                  <id>org.eclipse.equinox.p2.user.ui.feature.group</id>

                  <id>org.eclipse.equinox.executable.feature.group</id>
                  <id>org.eclipse.platform.ide</id>
                </iu>
              </ius>
              <!-- The destination directory to mirror to. -->
              <destination>${project.build.directory}/repos/org.eclipse.platform</destination>
              <!-- Whether only strict dependencies should be followed. -->
              <!-- "strict" means perfect version match -->
              <followStrictOnly>true</followStrictOnly>
              <!-- Whether or not to follow optional requirements. -->
              <includeOptional>false</includeOptional>
              <!-- Whether or not to follow non-greedy requirements. -->
              <includeNonGreedy>false</includeNonGreedy>
              <!-- Filter properties. E.g. filter only one platform -->
              <!-- Whether to filter the resulting set of IUs to only -->
              <!-- include the latest version of each IU -->
              <latestVersionOnly>true</latestVersionOnly>
              <!-- don't mirror artifacts, only metadata -->
              <mirrorMetadataOnly>false</mirrorMetadataOnly>
              <!-- whether to compress the content.xml/artifacts.xml -->
              <compress>true</compress>
              <!-- whether to append to the target repository content -->
              <append>true</append>
            </configuration>
          </execution>
          <execution>
            <id>mirror-org.eclipse.platform.source</id>
            <phase>package</phase>
            <goals>
              <goal>mirror</goal>
            </goals>
            <configuration>
              <source>
                <!-- source repositories to mirror from -->
                <repository>
                  <url>${project.baseUri}/target/repository</url>
                  <layout>p2</layout>
                  <!-- supported layouts are "p2-metadata", "p2-artifacts", and "p2" (for joint repositories; default) -->
                </repository>
              </source>
              <!-- starting from here all configuration parameters are optional -->
              <!-- they are only shown here with default values for documentation purpose -->
              <!-- List of IUs to mirror. If omitted, allIUs will be mirrored. -->
              <!-- Omitted IU version element means latest version of the IU -->
              <ius>
                <iu>
                  <id>org.eclipse.platform.feature.group</id>
                  <id>org.eclipse.platform.source.feature.group</id>
                  <id>org.eclipse.equinox.p2.user.ui.feature.group</id>
                  <id>org.eclipse.equinox.p2.user.ui.source.feature.group</id>

                  <id>org.eclipse.equinox.executable.feature.group</id>
                  <id>org.eclipse.platform.ide</id>
                </iu>
              </ius>
              <!-- The destination directory to mirror to. -->
              <destination>${project.build.directory}/repos/org.eclipse.platform.source</destination>
              <!-- Whether only strict dependencies should be followed. -->
              <!-- "strict" means perfect version match -->
              <followStrictOnly>true</followStrictOnly>
              <!-- Whether or not to follow optional requirements. -->
              <includeOptional>false</includeOptional>
              <!-- Whether or not to follow non-greedy requirements. -->
              <includeNonGreedy>false</includeNonGreedy>
              <!-- Filter properties. E.g. filter only one platform -->
              <!-- Whether to filter the resulting set of IUs to only -->
              <!-- include the latest version of each IU -->
              <latestVersionOnly>true</latestVersionOnly>
              <!-- don't mirror artifacts, only metadata -->
              <mirrorMetadataOnly>false</mirrorMetadataOnly>
              <!-- whether to compress the content.xml/artifacts.xml -->
              <compress>true</compress>
              <!-- whether to append to the target repository content -->
              <append>true</append>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-p2-director-plugin</artifactId>
        <configuration>
          <products>
            <product>
              <id>org.eclipse.platform.ide</id>
              <attachId>platform</attachId>
              <rootFolder>eclipse</rootFolder>
               <rootFolders>
                 <macosx>Eclipse.app</macosx>
               </rootFolders>
            </product>
            <product>
              <id>org.eclipse.sdk.ide</id>
              <attachId>sdk</attachId>
              <rootFolder>eclipse</rootFolder>
              <rootFolders>
                <macosx>Eclipse.app</macosx>
              </rootFolders>
            </product>
          </products>
          <source>repository</source> <!-- To leverage PGP signatures added to repo -->
        </configuration>
        <executions>
          <execution>
            <id>materialize-platform-product</id>
            <goals>
              <goal>materialize-products</goal>
            </goals>
            <configuration>
              <profile>SDKProfile</profile>
              <installSources>true</installSources>
            </configuration>
          </execution>
          <execution>
            <id>archive-products</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>archive-products</goal>
            </goals>
            <configuration>
              <formats>
                <win32>zip</win32>
                <linux>tar.gz</linux>
                <macosx>tar.gz</macosx>
              </formats>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>eclipse-sign</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.tycho</groupId>
            <artifactId>tycho-gpg-plugin</artifactId>
            <executions>
              <execution>
                <goals><goal>sign-p2-artifacts</goal></goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.eclipse.cbi.maven.plugins</groupId>
            <artifactId>eclipse-winsigner-plugin</artifactId>
            <version>${cbi-plugins.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>sign</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.eclipse.cbi.maven.plugins</groupId>
            <artifactId>eclipse-macsigner-plugin</artifactId>
            <version>${cbi-plugins.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>sign</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <timeoutMillis>300000</timeoutMillis> <!-- 5 min -->
                  <continueOnFail>${macSigner.forceContinue}</continueOnFail> 
                  <entitlements>${project.basedir}/../entitlement/platform.entitlement</entitlements>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.eclipse.cbi.maven.plugins</groupId>
            <artifactId>eclipse-dmg-packager</artifactId>
            <version>${cbi-plugins.version}</version>
            <executions>
              <execution>
                <id>dmg-package-platform-x86_64</id>
                <goals>
                  <goal>package-dmg</goal>
                </goals>
                <phase>integration-test</phase>
                <configuration>
                  <source>${project.build.directory}/products/org.eclipse.platform.ide-macosx.cocoa.x86_64.tar.gz</source>
                  <continueOnFail>true</continueOnFail>
                  <timeoutMillis>600000</timeoutMillis> <!-- 10 min -->
                  <continueOnFail>${macSigner.forceContinue}</continueOnFail> 
                  <sign>true</sign>
                </configuration>
              </execution>
              <execution>
                <id>dmg-package-platform-aarch64</id>
                <goals>
                  <goal>package-dmg</goal>
                </goals>
                <phase>integration-test</phase>
                <configuration>
                  <source>${project.build.directory}/products/org.eclipse.platform.ide-macosx.cocoa.aarch64.tar.gz</source>
                  <continueOnFail>true</continueOnFail>
                  <timeoutMillis>600000</timeoutMillis> <!-- 10 min -->
                  <continueOnFail>${macSigner.forceContinue}</continueOnFail> 
                  <sign>true</sign>
                </configuration>
              </execution>
              <execution>
                <id>dmg-package-sdk-x86_64</id>
                <goals>
                  <goal>package-dmg</goal>
                </goals>
                <phase>integration-test</phase>
                <configuration>
                  <source>${project.build.directory}/products/org.eclipse.sdk.ide-macosx.cocoa.x86_64.tar.gz</source>
                  <continueOnFail>true</continueOnFail>
                  <timeoutMillis>600000</timeoutMillis> <!-- 10 min -->
                  <continueOnFail>${macSigner.forceContinue}</continueOnFail>
                  <sign>true</sign>
                </configuration>
              </execution>
               <execution>
                <id>dmg-package-sdk-aarch64</id>
                <goals>
                  <goal>package-dmg</goal>
                </goals>
                <phase>integration-test</phase>
                <configuration>
                  <source>${project.build.directory}/products/org.eclipse.sdk.ide-macosx.cocoa.aarch64.tar.gz</source>
                  <continueOnFail>true</continueOnFail>
                  <timeoutMillis>600000</timeoutMillis> <!-- 10 min -->
                  <continueOnFail>${macSigner.forceContinue}</continueOnFail>
                  <sign>true</sign>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>