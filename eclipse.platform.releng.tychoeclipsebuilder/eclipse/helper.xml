<!--
  Copyright (c) 2016 IBM Corporation and others.

  This program and the accompanying materials
  are made available under the terms of the Eclipse Public License 2.0
  which accompanies this distribution, and is available at
  https://www.eclipse.org/legal/epl-2.0/

  SPDX-License-Identifier: EPL-2.0

  Contributors:
  David Williams - initial API and implementation
-->
<project
  name="Helper targets"
  default="noDefault">


  <target
    name="publish"
    depends="init"
    description="Preparing to post the build...">
    <echo message="[DEBUG] Eclipse helper.xml publish starting" />
    <fail
      unless="AGGR_DIR"
      message="AGGR_DIR must be defined for this this script" />

    <mkdir dir="${buildDirectory}/checksum" />
    <exec
      executable="/bin/bash"
      dir="${buildDirectory}">
      <arg line="${EBuilderDir}/eclipse/extras/produceChecksum.sh" />
      <env key="client" value="eclipse"/>
    </exec>

    <!--get static files required in the buildLabel directory -->
    <copy todir="${buildDirectory}">
      <fileset dir="${publishingContent}/staticDropFiles" />
    </copy>

    <antcall target="generateEclipseIndex" />

    <echo message="DEBUG: BUILD_FAILED: env.BUILD_FAILED: ${env.BUILD_FAILED}" />
    <echo message="[DEBUG] Eclipse helper.xml publish ending normally" />
  </target>

  <target
    name="generateEclipseIndex"
    depends="init">

    <fail
      unless="buildType"
      message="buildType must be defined to generateIndex before calling publish.xml" />

    <!--regenerate the index page with links to test results -->
    <ant
      antfile="${cjeDir}/scripts/publish.xml"
      dir="${publishingContent}"
      target="generateIndex">
      <property
        name="dropTemplateFileName"
        value="${EBuilderDir}/eclipse/publishingFiles/templateFiles/index.template.php" />
      <property
        name="compileLogsDirectoryName"
        value="${buildDirectory}/compilelogs/plugins" />
      <property
        name="indexFileName"
        value="index.php" />
      <property
        name="manifestFile"
        value="${EBuilderDir}/eclipse/publishingFiles/testManifest.xml" />
      <property
        name="testsConfigExpected"
        value="${env.TEST_CONFIGURATIONS_EXPECTED}" />
    </ant>

  </target>

  <target
    name="verifyCompile"
    depends="init"
    if="eclipse.running">
    <echo message="DEBUG: in helper.xml: Checking for compile errors..." />
    <!--create html output for compile logs -->
    <eclipse.convert
      input="${buildDirectory}/compilelogs/plugins"
      validation="true" />
  </target>

  <target name="init">
    <!-- we make sure 'job' has some value (that would not match conditions),
      so "conditions" will work, ultimately getting some
      "no match" default value. But not setting
      it to something seems to cause them to "bomb out"
      TODO: eliminate "job" as a variable.
      That only works if doing one job at a time, which
      is not always true.
    -->
    <property
      name="job"
      value="jobNOTpassedin" />
    <echo message="in helper.xml the value of job passed in (or, not) was ${job}" />


    <property environment="env" />

    <fail
      unless="EBuilderDir"
      message="EBuilderDir (tychoeclipsebuilder dir) must be passed in to this script" />
    <fail
      unless="buildDirectory"
      message="buildDirectory must be passed to this script." />
    <fail
      unless="buildLabel"
      message="buildLabel must be passed to this script." />
    <property
      name="publishingContent"
      value="${EBuilderDir}/eclipse/publishingFiles" />

    <fail
      unless="buildLabel"
      message="buildLabel must be passed in to helper.xml" />

    <!-- should already exist ... but, just in case not ... -->
    <mkdir dir="${buildDirectory}" />

  </target>

  <!-- ===================================================================== -->
  <!-- Default target -->
  <!-- ===================================================================== -->
  <target name="noDefault">
    <echo message="You must specify a target when invoking this file" />
  </target>

</project>
