<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2016, 2018 IBM Corporation and others.

    This program and the accompanying materials
    are made available under the terms of the Eclipse Public License 2.0
    which accompanies this distribution, and is available at
    https://www.eclipse.org/legal/epl-2.0/

    SPDX-License-Identifier: EPL-2.0
   
    Contributors:
        David Williams - initial API and implementation
 -->

<project
  name="Publish Build"
  default="generateIndex">

  <target name="generateIndex"
    depends="initResultsVariables">

    <property
      name="class"
      value="org.eclipse.releng.generators.TestResultsGenerator" />
    <taskdef
      name="indexResults"
      classname="${class}" />

    <echo message=" = = properties in publish.xml == " />
    <echo message="     job: ${job}" />
    <echo message="     isBuildTested: ${isBuildTested}" />
    <echo message="     buildType:  ${buildType}" />
    <echo message="     dropTokenList: ${dropTokenList}" />
    <echo message="     indexFileName: ${indexFileName}" />
    <echo message="     xmlDirectoryName: ${xmlDirectoryName}" />
    <echo message="     dropDirectoryName: ${buildDirectory}" />
    <echo message="     dropTemplateFileName: ${dropTemplateFileName}" />
    <echo message="     testResultsHtmlFileName: ${testResultsHtmlFileName}" />
    <echo message="     hrefTestResultsTargetPath: ${hrefTestResultsTargetPath}" />
    <echo message="     hrefCompileLogsTargetPath: ${hrefCompileLogsTargetPath}" />
    <echo message="     compileLogsDirectoryName: ${compileLogsDirectoryName}" />
    <echo message="     testManifestFileName: ${manifestFile}" />
    <echo message="     testsConfigExpected: ${testsConfigExpected}" />
    <echo message="     expectedConfigFilename: ${expectedConfigFilename}" />
    <echo message="     foundConfigFilename: ${foundConfigFilename}" /> 
    <echo message="     doMissingListValue:  ${doMissingListValue}" />
    <indexResults
      isBuildTested="${isBuildTested}"
      buildType="${buildType}"
      dropTokenList="${dropTokenList}"
      dropHtmlFileName="${indexFileName}"
      xmlDirectoryName="${xmlDirectoryName}"
      dropDirectoryName="${buildDirectory}"
      dropTemplateFileName="${dropTemplateFileName}"
      testResultsHtmlFileName="${testResultsHtmlFileName}"
      hrefTestResultsTargetPath="${hrefTestResultsTargetPath}"
      hrefCompileLogsTargetPath="${hrefCompileLogsTargetPath}"
      compileLogsDirectoryName="${compileLogsDirectoryName}"
      testManifestFileName="${manifestFile}"
      testsConfigExpected="${testsConfigExpected}"
      expectedConfigFilename="${expectedConfigFilename}"
      foundConfigFilename="${foundConfigFilename}"
      doMissingList="${doMissingListValue}" />
  </target>

  <target name="initResultsVariables"
    depends="init">
    <fail unless="job" />

    <property
      name="isBuildTested"
      value="true" />

    <loadresource property="buildType">
      <string value="${buildID}"/>
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="^([IMXYNPSRU])(\d{8})-(\d{4})$" replace="\1"/>
        </tokenfilter>
      </filterchain>
    </loadresource>

    <property
      name="dropTokenList"
      value="%repository%,%sdk%,%tests%,%runtime%,%jdtc%,%swt%" />

    <condition
      property="indexFileName"
      value="performance/performance.php">
      <contains
        string="${job}"
        substring="-perf-" />
    </condition>
    <condition
      property="indexFileName"
      value="testResults.php">
      <contains
        string="${job}"
        substring="-unit-" />
    </condition>
    <!-- else standard default for download page -->
    <property
      name="indexFileName"
      value="index.php" />

    <!-- xml results directory -->
    <condition
      property="xmlDirectoryName"
      value="${buildDirectory}/performance/xml">
      <contains
        string="${job}"
        substring="-perf-" />
    </condition>
    <!-- else standard default for unit tests -->
    <property
      name="xmlDirectoryName"
      value="${buildDirectory}/testresults/xml" />

    <condition
      property="dropTemplateFileName"
      value="${EBuilderDir}/eclipse/publishingFiles/templateFiles/performance.php">
      <contains
        string="${job}"
        substring="-perf-" />
    </condition>
    <condition
      property="dropTemplateFileName"
      value="${EBuilderDir}/eclipse/publishingFiles/staticDropFiles/testResults.php">
      <contains
        string="${job}"
        substring="-unit-" />
    </condition>
    <!-- else standard default for download index.php page -->
    <property
      name="dropTemplateFileName"
      value="${EBuilderDir}/eclipse/publishingFiles/templateFiles/index.template.php" />

    <condition
      property="testResultsHtmlFileName"
      value="performanceResultsTable.html">
      <contains
        string="${job}"
        substring="-perf-" />
    </condition>
    <property
      name="testResultsHtmlFileName"
      value="testResultsTables.html" />

    <condition
      property="hrefTestResultsTargetPath"
      value=".">
      <contains
        string="${job}"
        substring="-perf-" />
    </condition>
    <property
      name="hrefTestResultsTargetPath"
      value="testresults" />

    <property
      name="hrefCompileLogsTargetPath"
      value="compilelogs/plugins/" />
    <property
      name="compileLogsDirectoryName"
      value="${buildDirectory}/${hrefCompileLogsTargetPath}" />
    
    <condition
      property="manifestFile"
      value="${EBuilderDir}/eclipse/publishingFiles/performanceTestManifest.xml"
      else="${EBuilderDir}/eclipse/publishingFiles/testManifest.xml">
      <contains
        string="${job}"
        substring="-perf-" />
    </condition>

    <condition
      property="testsConfigExpected"
      value="ep${eclipseStreamMajor}${eclipseStreamMinor}${buildType}-perf-lin64_linux.gtk.x86_64_11,ep${eclipseStreamMajor}${eclipseStreamMinor}${buildType}-perf-lin64-baseline_linux.gtk.x86_64_11">
      <contains
        string="${job}"
        substring="-perf-" />
    </condition>
    <!-- else normal unit tests configs -->
    <property
      name="testsConfigExpected"
      value="ep${eclipseStreamMajor}${eclipseStreamMinor}${buildType}-unit-mac64-java17_macosx.cocoa.x86_64_17,ep${eclipseStreamMajor}${eclipseStreamMinor}${buildType}-unit-macM1-java17_macosx.cocoa.aarch64_17,ep${eclipseStreamMajor}${eclipseStreamMinor}${buildType}-unit-win32-java17_win32.win32.x86_64_17,ep${eclipseStreamMajor}${eclipseStreamMinor}${buildType}-unit-cen64-gtk3-java17_linux.gtk.x86_64_17,ep${eclipseStreamMajor}${eclipseStreamMinor}${buildType}-unit-cen64-gtk3-java21_linux.gtk.x86_64_21,ep${eclipseStreamMajor}${eclipseStreamMinor}${buildType}-unit-cen64-gtk3-java22_linux.gtk.x86_64_22" />

    <condition
      property="expectedConfigFilename"
      value="perfTestConfigs.php"
      else="testConfigs.php">
      <contains
        string="${job}"
        substring="-perf-" />
    </condition>

    <condition
      property="foundConfigFilename"
      value="perfTestConfigsFound.php"
      else="testConfigsFound.php">
      <contains
        string="${job}"
        substring="-perf-" />
    </condition>

    <!-- we should be able to do this now, and refine list in manifest. -->
    <property
      name="doMissingListValue"
      value="true" />

  </target>

  <target name="init">
    <fail unless="buildID" />
    <fail unless="eclipseStream" />
    <fail unless="postingDirectory" />

    <property
      name="buildDirectory"
      value="${postingDirectory}/${buildID}" />

    <condition property="streamOK">
      <matches
        pattern="\d+\.\d+\.\d+"
        string="${eclipseStream}" />
    </condition>
    <fail
      message="eclipseStream variable had unexpected format. Should be digit.digit.digit, but was ${eclipseStream}"
      unless="streamOK" />

    <loadresource property="eclipseStreamMajor">
      <string value="${eclipseStream}"/>
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="^(\d+)\.(\d+)(\.(\d+))" replace="\1"/>
        </tokenfilter>
      </filterchain>
    </loadresource>
    <echo message="eclipseStreamMajor: ${eclipseStreamMajor}"/>

    <loadresource property="eclipseStreamMinor">
      <string value="${eclipseStream}"/>
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="^(\d+)\.(\d+)(\.(\d+))" replace="\2"/>
        </tokenfilter>
      </filterchain>
    </loadresource>
    <echo message="eclipseStreamMinor: ${eclipseStreamMinor}"/>

    <loadresource property="eclipseStreamService">
      <string value="${eclipseStream}"/>
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="^(\d+)\.(\d+)(\.(\d+))" replace="\3"/>
        </tokenfilter>
      </filterchain>
    </loadresource>
    <echo message="eclipseStreamService: ${eclipseStreamService}"/>
  
  </target>

</project>
