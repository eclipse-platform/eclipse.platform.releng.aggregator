<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><html lang="en">
<HEAD>

<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
Accessible user interfaces
</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY>
<h2>Accessible User Interfaces</h2>
<p>The term accessible is used to refer to software that has been designed so
that people who have disabilities have a successful interaction with it.&nbsp;
Accessible software takes many different kinds of disabilities into account:</p>


<ul>
  <li>visual - people with color blindness, low vision, or who are completely
    blind</li>
  <li>audio - people who are hard of hearing or are completely deaf</li>
  <li>mobility - people who have physical impairments that limit their movement
    and fine motor controls</li>
  <li>cognitive - people who have learning disabilities and may need more
    consistency or simplicity in their interfaces</li>
</ul>
<h3>Assistive Technology</h3>
<p><b>Assistive technology</b> is equipment or software that is used to increase
the accessibility of existing operating systems and applications.&nbsp; While it
is beyond the scope of this programmer's guide to cover the broad scope of
assistive technologies, it is important for you to know that they exist.&nbsp;
Why?&nbsp; Because simple things you can do when programming your software or
documentation, such as providing alternate text descriptions for images in your HTML, or
keyboard equivalents for all of your software actions, can greatly improve the
effectiveness of assistive technologies that make use of these techniques.</p>
<h3>Accessibility Resources</h3>
<p>There are some basic coding tips you can use when building plug-in user
interfaces that will increase the accessibility of your software.&nbsp; See <a href="../reference/misc/ui_accessibility_tips.html">Tips
for Making User Interfaces More Accessible</a> for more information.</p>
<p><a href="http://www-03.ibm.com/able/index.html">IBM's Accessibility Center
Website</a> has many useful resources for accessibility, including <a href="http://www-03.ibm.com/able/guidelines">guidelines
and checklists</a> for developing software and web interfaces.</p>
<h3>SWT and Accessibility</h3>
<p>Because SWT uses the operating system's native widgets, user interfaces built
with SWT will inherit any assistive technologies that have been installed on the
host operating system.&nbsp; SWT implements an interface, <a href="../reference/api/org/eclipse/swt/accessibility/AccessibleListener.html"><b>AccessibleListener</b></a>,
which provides basic accessibility information, such as descriptions of
controls, help text, and keyboard shortcuts, to clients.&nbsp; If you are
developing assistive technologies that need more information or want to improve
upon the basic accessibiliity of the workbench, you can add your own listeners
and override the default accessibility behavior in the platform.&nbsp; See the
package <a href="../reference/api/org/eclipse/swt/accessibility/package-summary.html"><b>org.eclipse.swt.accessibility</b></a>
for more detail.</p>
<p>&nbsp;</p>



</BODY>
</HTML>
