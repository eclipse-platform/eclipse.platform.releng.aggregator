<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html lang="en">
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2005. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >
<meta charset="ISO-8859-1">
<link rel="STYLESHEET" href="../book.css" charset="ISO-8859-1" type="text/css">
<title>JDT Programmer's Guide</title>
<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body>
<h1>JDT Programmer's Guide</h1>
<p>The Eclipse platform is delivered with a full featured Java integrated development 
  environment (IDE). Java development tooling (JDT) allows users to write, compile, 
  test, debug, and edit programs written in the Java programming language.</p>
<p>The JDT makes use of many of the platform extension points and frameworks described 
  in the Platform Plug-in Developer Guide.&nbsp; It's easiest to think of 
  the JDT as a set of plug-ins that add Java specific behavior to the generic 
  platform resource model and contribute Java specific views, editors, and actions 
  to the workbench.</p>
<p> This guide discusses the extension points and API provided by the JDT. 
  We assume that you already understand the concepts of plug-ins, extension points, 
  workspace resources, and the workbench UI.&nbsp; </p>
<p>Given that the JDT supplies a full featured Java IDE, why would you need to 
  use the JDT API?&nbsp; If you are building a plug-in that interacts with Java programs or resources 
  as part of its function, you may need to do one or more of the following things:</p>
<ul>
  <li> Programmatically manipulate Java resources, such as creating projects, 
    generating Java source code, performing builds, or detecting problems in code.</li>
  <li> Programmatically launch a Java program from the platform</li>
  <li> Provide a new type of VM launcher to support a new family of Java runtimes</li>
  <li> Add new functions and extensions to the Java IDE itself</li>
</ul>
<p> The JDT is structured into three major components:</p>
<ul>
  <li><a href="jdt_int_core.htm">JDT Core</a> - the headless infrastructure for compiling and manipulating Java
    code.</li>
  <li><a href="jdt_int_ui.htm">JDT UI</a> - the user interface extensions that provide the IDE.</li>
  <li><a href="jdt_int_debug.htm">JDT Debug</a> - program launching and debug support specific to the Java programming language.</li>
</ul>
<p>We'll examine each component's structure and the API it provides.</p>

</body>
</html>
