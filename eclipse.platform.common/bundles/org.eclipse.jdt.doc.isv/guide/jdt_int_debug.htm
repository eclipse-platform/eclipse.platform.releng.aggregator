<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html lang="en">
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2018. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >
<meta charset="ISO-8859-1">
<link rel="STYLESHEET" href="../book.css" charset="ISO-8859-1" type="text/css">
<title>JDT Debug</title>
<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body>
<h2>JDT Debug</h2>
<p> JDT Debug is comprised of several plug-ins that support the running and
debugging of Java code.</p>
<ul>
  <li><b>org.eclipse.jdt.launching</b> is the plug-in that defines the Java launching 
    and runtime support. You will require this plug-in if you 
    need to launch Java virtual machines programmatically.&nbsp; The JDT
    launching is closely tied to the platform launching facility, which is
    described in <a href="../../org.eclipse.platform.doc.isv/guide/debug_launch.htm">Launching
    a program</a>.
    <p>The package <a href="../reference/api/org/eclipse/jdt/launching/package-summary.html"><b>org.eclipse.jdt.launching </b></a> provides classes for launching Java runtimes 
    from the platform.&nbsp; <b><a href="../reference/api/org/eclipse/jdt/launching/JavaRuntime.html">JavaRuntime</a> </b> implements static methods to access registered VMs and 
    compute runtime classpaths and source lookup paths.&nbsp; A family of VM's 
    (such as the JDK) is represented by the <a href="../reference/api/org/eclipse/jdt/launching/IVMInstallType.html"><b> 
    IVMInstallType</b></a> class. <a href="../reference/api/org/eclipse/jdt/launching/IVMInstall.html"><b> 
    IVMInstall</b></a> represents particular installations within a family.&nbsp; 
    The <a href="../reference/api/org/eclipse/jdt/launching/IVMRunner.html"><b> 
    IVMRunner</b></a> is used to start a particular Java VM and register its processes 
    with the debug plug-in.</p>
    <p>The package <a href="../reference/api/org/eclipse/jdt/launching/sourcelookup/containers/package-summary.html"><b>org.eclipse.jdt.launching.sourcelookup.containers 
      </b></a>defines classes for locating source code elements in the file system.<br></p>
    <p>The package <a href="../reference/api/org/eclipse/jdt/launching/sourcelookup/advanced/package-summary.html"><b>org.eclipse.jdt.launching.sourcelookup.advanced 
      </b></a>defines classes for locating source code elements in the file system or on-demand download using advanced source lookup.<br></p>
  </li>
  <li><b>org.eclipse.jdt.debug</b> is the plug-in that defines the Java debug 
    model. You will require this plug-in if you need to programmatically 
    access objects in a program being debugged.&nbsp; The JDT debug model is
    closely tied to the platform debug model, which is described in <a href="../../org.eclipse.platform.doc.isv/guide/debug_model.htm">Platform
    debug model</a>.
    <p>The package <a href="../reference/api/org/eclipse/jdt/debug/core/package-summary.html"><b>org.eclipse.jdt.debug.core</b></a> supports a Java debug model based on
    JDI/JDWP 
    that can be used for controlling a Java program under debug.</p>
    <p>The package <a href="../reference/api/org/eclipse/jdt/debug/eval/package-summary.html"><b>org.eclipse.jdt.debug.eval</b></a> provides infrastructure for evaluating
    Java expressions and reporting results.</p>
  </li>
  <li><b>org.eclipse.jdt.debug.ui</b> is the plug-in that defines the Java debug 
    UI extensions. Most of the debugger API is provided by the platform debugger
    infrastructure described in <a href="../../org.eclipse.platform.doc.isv/guide/debug_presentation.htm">Debug
    model presentation</a> and <a href="../../org.eclipse.platform.doc.isv/guide/debug_ui.htm">Debug
    UI utility classes</a>.&nbsp; The Java debug UI API focuses on accessing the prompting source locator
    and Java launch configuration 
    tabs.&nbsp;&nbsp;
    <p>The package <a href="../reference/api/org/eclipse/jdt/debug/ui/launchConfigurations/package-summary.html"><b> 
    org.eclipse.jdt.debug.ui.launchConfigurations</b></a> defines the launch
    configuration tabs for local and remote Java applications.</p></li>
</ul>
</body>
</html>
