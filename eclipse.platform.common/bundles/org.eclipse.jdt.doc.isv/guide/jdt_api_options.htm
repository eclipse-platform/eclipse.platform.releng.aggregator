<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<meta name="copyright" content=
"Copyright (c) IBM Corporation and others 2000, 2020. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="STYLESHEET" href="../book.css" charset="ISO-8859-1" type="text/css" />
<title>JDT Core options</title>
</head>
<body>
<h2>JDT Core Options</h2>
<p>JDT Core options control the behavior of core features such as the Java compiler, code
formatter, code assist, and other core behaviors.&nbsp; The APIs for accessing the options are
defined in <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html"><b>JavaCore</b></a>.&nbsp;

Options can be accessed as a group as follows:</p>
<ul>
<li><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#getDefaultOptions()">JavaCore.getDefaultOptions()</a></b>
- Answers the default value of the options.</li>
<li><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#getOptions()">JavaCore.getOptions()</a></b> -
Answers the current values of the options.</li>
<li><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#setOptions(java.util.Hashtable)">JavaCore.setOptions(Hashtable
newOptions)</a></b> - Replaces the options values by new values.</li>
</ul>
<p>Options can also be accessed individually by a string name.</p>

<ul>
<li><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#getOption(java.lang.String)">JavaCore.getOption(String
optionName)</a></b> - Answers the value of a specific option.</li>
</ul>
<p>Options that can configure the severity of a problem can also be found.</p>
<ul>
<li><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#getOptionForConfigurableSeverity(int)">JavaCore.getOptionForConfigurableSeverity(int
problemID)</a></b> - Answers the option to use to configure the severity of the problem
identified by <code>problemID</code>.</li>
</ul>
<p>Options are stored as a hash table of all known configurable options with their values. Helper
constants have been defined on <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html"><b>JavaCore</b></a> for each option ID and
its possible constant values.</p>

<p>The following code fragment restores the value of all core options to their defaults except for
one (<code>COMPILER_PB_DEPRECATION</code>), which is set specifically.</p>
<pre class="color1">

   // Get the default options
   Hashtable options = JavaCore.getDefaultOptions();
   
   // Change the value of an option
   options.put(JavaCore.COMPILER_PB_DEPRECATION, JavaCore.ERROR);
   
   // Set the new options
   JavaCore.setOptions(options);
</pre>
<p>The following code fragment keeps the value of the current options and modifies only one
(<code>COMPILER_PB_DEPRECATION</code>):</p>
<pre class="color1">

   // Get the current options
   Hashtable options = JavaCore.getOptions();
   
   // Change the value of an option
   options.put(JavaCore.COMPILER_PB_DEPRECATION, JavaCore.ERROR);
   
   // Set the new options
   JavaCore.setOptions(options);

</pre>
<h3>Project Specific Options</h3>
<p>The values of options can be overridden per project using protocol in <a href=
"../reference/api/org/eclipse/jdt/core/IJavaProject.html"><b>IJavaProject</b></a>.</p>
<p>The following code fragment retrieves the value of an option
(<code>COMPILER_PB_DEPRECATION</code>) for a specific project in two different ways.&nbsp; The
boolean parameter controls whether only the project-specific options should be returned in a query
or whether the project's option values should be merged with the values in JavaCore.</p>
<pre>
<span class="c2">
   // Get the project
   IJavaProject project = ...;

   // See if the value of an option has been set in this project
   String value = project.getOption(JavaCore.COMPILER_PB_DEPRECATION, <b>false</b>);
   if (value == null) {
     // no specific option was set on the project
     ...
   }
   
   // Get the value of an option from this project.  Use the value from 
   // JavaCore value if none is specified for the project
   String value = project.getOption(JavaCore.COMPILER_PB_DEPRECATION, <b>true</b>);</span>

</pre>
<h3>JDT Core Options Descriptions</h3>
<p>The following tables describe the available JDT Core options.&nbsp; The option id is shown in
parentheses and the default value is shown in bold italics.</p>
<h4>Options Categories</h4>
<ul>
<li><b><a href="#compiler">Compiler options</a></b></li>
<li><b><a href="#builder">Builder options</a></b></li>
<li><b><a href="#javacore">JavaCore options</a></b></li>
<li><b><a href="#formatter">Formatter options</a></b></li>

<li><b><a href="#codeassist">CodeAssist options</a></b></li>
</ul>
<h4><a name="compiler" id="compiler">Compiler Options</a></h4>
<table border="1" cellspacing="2" cellpadding="2" width="100%">
<tr>
<th>Description</th>
<th width="140">Values</th>
</tr>

<tr>
<td colspan="2"><b>Annotation Based Null Analysis</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">This option controls whether the compiler will use null annotations for
  improved analysis of (potential) null references.
<p>When enabled, the compiler will interpret the annotation types defined using
  <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_ANNOTATION_NAME">COMPILER_NONNULL_ANNOTATION_NAME</a>
 and <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NULLABLE_ANNOTATION_NAME">COMPILER_NULLABLE_ANNOTATION_NAME</a>
  as specifying whether or not a given type includes the value <code>null</code>.</p>
<p>The effect of these analyses is further controlled by the options
  <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_SPECIFICATION_VIOLATION">COMPILER_PB_NULL_SPECIFICATION_VIOLATION</a>,
  <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_ANNOTATION_INFERENCE_CONFLICT">COMPILER_PB_NULL_ANNOTATION_INFERENCE_CONFLICT</a>,
  <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_UNCHECKED_CONVERSION">COMPILER_PB_NULL_UNCHECKED_CONVERSION</a>,
  <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_REDUNDANT_NULL_ANNOTATION">COMPILER_PB_REDUNDANT_NULL_ANNOTATION</a>,
  <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_NONNULL_BY_DEFAULT_ANNOTATION">COMPILER_PB_MISSING_NONNULL_BY_DEFAULT_ANNOTATION</a>,
  <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_SYNTACTIC_NULL_ANALYSIS_FOR_FIELDS">COMPILER_PB_SYNTACTIC_NULL_ANALYSIS_FOR_FIELDS</a>,
  <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NONNULL_PARAMETER_ANNOTATION_DROPPED">COMPILER_PB_NONNULL_PARAMETER_ANNOTATION_DROPPED</a>, and
  <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_INHERIT_NULL_ANNOTATIONS">COMPILER_INHERIT_NULL_ANNOTATIONS</a>.</p></td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></i></b></td>
</tr>
<tr>

<td colspan="2"><b>Inline JSR Bytecode Instruction</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_CODEGEN_INLINE_JSR_BYTECODE">COMPILER_CODEGEN_INLINE_JSR_BYTECODE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When enabled in conjunction with a Java target platform lesser than or equal to
"1.4", the compiler will no longer generate JSR instructions, but rather inline corresponding
subroutine code sequences (mostly corresponding to try finally blocks). The generated code will
thus get bigger, but will load faster on virtual machines since the verification process is then
much simpler. This mode is adding support for the Java Specification Request 202 to pre-"1.5" Java
target platforms.<br />
For a Java target platform greater than or equal to "1.5", the inlining of the JSR bytecode
instruction is mandatory and this option is ignored.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></i></b></td>
</tr>
<tr>

<td colspan="2"><b>Generating Method Parameters Attribute</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_CODEGEN_METHOD_PARAMETERS_ATTR">COMPILER_CODEGEN_METHOD_PARAMETERS_ATTR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When generated, this attribute will enable information about the formal parameters
of a method (such as their names) to be accessed from reflection libraries, annotation processing,
code weaving, and in the debugger, from platform target level 1.8 and later.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#GENERATE">GENERATE</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_GENERATE">DO_NOT_GENERATE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Setting Target Java Platform</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_CODEGEN_TARGET_PLATFORM">COMPILER_CODEGEN_TARGET_PLATFORM</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="16">For binary compatibility reason, .class files are tagged with VM versions that are
defined for each level of the reference specification. The target Java platform specifies the
minimum runtime level required to execute the generated class files.<br />
The compliance, source and target levels must satisfy a set of constraints summarized in a <a href=
"#compatibility"><b>compatibility table</b></a> below.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_1">VERSION_1_1</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_2">VERSION_1_2</a></i></b></td>
</tr>
<tr valign="top">

<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_3">VERSION_1_3</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_4">VERSION_1_4</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_5">VERSION_1_5</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_6">VERSION_1_6</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_7">VERSION_1_7</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_8">VERSION_1_8</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_9">VERSION_9</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_10">VERSION_10</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_11">VERSION_11</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_12">VERSION_12</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_13">VERSION_13</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_14">VERSION_14</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_15">VERSION_15</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_CLDC_1_1">VERSION_CLDC_1_1</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Preserving Unused Local Variables</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_CODEGEN_UNUSED_LOCAL">COMPILER_CODEGEN_UNUSED_LOCAL</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Unless requested to preserve unused local variables (i.e. never read), the compiler
will optimize them out, potentially altering debugging.</td>
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#PRESERVE">PRESERVE</a></i></b></td>

</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#OPTIMIZE_OUT">OPTIMIZE_OUT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Setting Compliance Level</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_COMPLIANCE">COMPILER_COMPLIANCE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="13">Select the compliance level for the compiler, which will then behave according to
the said level of the reference specification.<br />
The compliance, source and target levels must satisfy a set of constraints summarized in a <a href=
"#compatibility"><b>compatibility table</b></a> below.</td>

<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_3">VERSION_1_3</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_4">VERSION_1_4</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_5">VERSION_1_5</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_6">VERSION_1_6</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_7">VERSION_1_7</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_8">VERSION_1_8</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_9">VERSION_9</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_10">VERSION_10</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_11">VERSION_11</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_12">VERSION_12</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_13">VERSION_13</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_14">VERSION_14</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_15">VERSION_15</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Javadoc Comment Support</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_DOC_COMMENT_SUPPORT">COMPILER_DOC_COMMENT_SUPPORT</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When this support is disabled, the compiler will ignore all javadoc problems
options settings and will not report any javadoc problem. It will also not find any reference in
javadoc comment and DOM AST Javadoc node will be only a flat text instead of having structured tag
elements.</td>
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>

</tr>

<tr>
<td colspan="2"><a name="COMPILER_INHERIT_NULL_ANNOTATIONS" id="COMPILER_INHERIT_NULL_ANNOTATIONS"></a><b>Inheritance of Null Annotations</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_INHERIT_NULL_ANNOTATIONS">COMPILER_INHERIT_NULL_ANNOTATIONS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will check for each method without any explicit null annotations
	 (see <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a>):
	 If it overrides a method which has null annotations, it will treat the
	 current method as if it had the same annotations as the overridden method.
	 <p>Annotation inheritance will use the <em>effective</em> nullness of the overridden method
	    after transitively applying inheritance and after applying any default nullness
	    (see <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_NAME">COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_NAME</a>) 
	    at the site of the overridden method.</p>
	 <p>If different implicit null annotations (from a nonnull default and/or overridden methods) are applicable
	    to the same type in a method signature, this is flagged as an error 
	    and an explicit null annotation must be used to disambiguate.</p></td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></i></b></td>
</tr>

<tr>
<td colspan="2"><b>Generating Line Number Debug Attribute</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_LINE_NUMBER_ATTR">COMPILER_LINE_NUMBER_ATTR</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When generated, this attribute will enable source code highlighting in the debugger
(.class file is then bigger).</td>
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#GENERATE">GENERATE</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_GENERATE">DO_NOT_GENERATE</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Generating Local Variable Debug Attribute</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_LOCAL_VARIABLE_ATTR">COMPILER_LOCAL_VARIABLE_ATTR</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When generated, this attribute will enable local variable names to be displayed in
the debugger, only in places where variables are definitely assigned (.class file is then
bigger).</td>
<td><i><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#GENERATE">GENERATE</a></b></i></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_GENERATE">DO_NOT_GENERATE</a></b></td>
</tr>

<tr>
<td colspan="2"><a name="COMPILER_NONNULL_ANNOTATION_NAME" id="COMPILER_NONNULL_ANNOTATION_NAME"></a><b>Name of Annotation Type for Non-Null Types</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_ANNOTATION_NAME">COMPILER_NONNULL_ANNOTATION_NAME</a></b>)</td>
</tr>
<tr valign="top">
<td>This option defines a fully qualified Java type name that the compiler may use
	to perform special null analysis.
 <p>If the annotation specified by this option is applied to a type in a method
    signature or variable declaration, this will be interpreted as a specification
    that <code>null</code> is <b>not</b> a legal value in that position. Currently
    supported positions are: method parameters, method return type and local variables.</p>
 <p>For values declared with this annotation, the compiler will never trigger a null
    reference diagnostic (as controlled by <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_POTENTIAL_NULL_REFERENCE">COMPILER_PB_POTENTIAL_NULL_REFERENCE</a>
    and <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_REFERENCE">COMPILER_PB_NULL_REFERENCE</a>), because the assumption is made that null
    will never occur at runtime in these positions.</p>
 <p>The compiler may furthermore check adherence to the null specification as
    further controlled by <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_SPECIFICATION_VIOLATION">COMPILER_PB_NULL_SPECIFICATION_VIOLATION</a>,
    <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_ANNOTATION_INFERENCE_CONFLICT">COMPILER_PB_NULL_ANNOTATION_INFERENCE_CONFLICT</a> and
    <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_UNCHECKED_CONVERSION">COMPILER_PB_NULL_UNCHECKED_CONVERSION</a>.</p>
 <p>This option only has an effect if the option <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a> is enabled.</p>
</td>
<td>The qualified name of a Java annotation type<br/>
<b>Default is: <code>org.eclipse.jdt.annotation.NonNull</code></b></td>
</tr>

<tr>
<td colspan="2"><a name="COMPILER_NONNULL_ANNOTATION_SECONDARY_NAMES" id="COMPILER_NONNULL_ANNOTATION_SECONDARY_NAMES"></a>
<b>Names of Secondary Annotation Types for Non-Null Types</b> 
(<b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_ANNOTATION_SECONDARY_NAMES">COMPILER_NONNULL_ANNOTATION_SECONDARY_NAMES</a></b>)
</td>
</tr>
<tr valign="top">
<td>This option defines a comma-separated list of fully qualified Java type names
	that the compiler may use to perform special null analysis.
 <p>The annotation types identified by the names in this list are interpreted in the same way
    as the annotation identified by {@link #COMPILER_NONNULL_ANNOTATION_NAME}.
    The intention is to support libraries using different sets of null annotations,
    in addition to those used by the current project. Secondary null annotations should not be
    used in the project's own source code.</p>
 <p>JDT will never actively use any secondary annotation names from this list,
    i.e., inferred null annotations and content assist proposals mentioning null annotations
    are always rendered using the primary name from 
    <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_ANNOTATION_NAME">COMPILER_NONNULL_ANNOTATION_NAME</a>.</p>
 <p>This option only has an effect if the option 
 <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a> is enabled.</p>
</td>
<td>The qualified name of a Java annotation type<br/>
<b>Default is: <code>""</code></b></td>
</tr>

<tr>
<td colspan="2"><b>Name of Annotation Type for Nullable Types</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NULLABLE_ANNOTATION_NAME">COMPILER_NULLABLE_ANNOTATION_NAME</a></b>)</td>
</tr>
<tr valign="top">
<td>This option defines a fully qualified Java type name that the compiler may use
	to perform special null analysis.
 <p>If the annotation specified by this option is applied to a type in a method
    signature or variable declaration, this will be interpreted as a specification
    that <code>null</code> is a legal value in that position. Currently supported
    positions are: method parameters, method return type and local variables.</p>
 <p>If a value whose type
    is annotated with this annotation is dereferenced without checking for null,
    the compiler will trigger a diagnostic as further controlled by
    <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_POTENTIAL_NULL_REFERENCE">COMPILER_PB_POTENTIAL_NULL_REFERENCE</a>.</p>
 <p>The compiler may furthermore check adherence to the null specification as
    further controlled by <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_SPECIFICATION_VIOLATION">COMPILER_PB_NULL_SPECIFICATION_VIOLATION</a>,
    <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_ANNOTATION_INFERENCE_CONFLICT">COMPILER_PB_NULL_ANNOTATION_INFERENCE_CONFLICT</a> and
    <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_UNCHECKED_CONVERSION">COMPILER_PB_NULL_UNCHECKED_CONVERSION</a>.</p>
 <p>This option only has an effect if the option <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a> is enabled.</p>
</td>
<td>The qualified name of a Java annotation type<br/>
<b>Default is: <code>org.eclipse.jdt.annotation.Nullable</code></b></td>
</tr>

<tr>
<td colspan="2"><b>Names of Secondary Annotation Types for Nullable Types</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NULLABLE_ANNOTATION_SECONDARY_NAMES">COMPILER_NULLABLE_ANNOTATION_SECONDARY_NAMES</a></b>)</td>
</tr>
<tr valign="top">
<td>This option defines a comma-separated list of fully qualified Java type names
that the compiler may use to perform special null analysis.
 <p>The annotation types identified by the names in this list are interpreted in the same way
    as the annotation identified by <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NULLABLE_ANNOTATION_NAME">COMPILER_NULLABLE_ANNOTATION_NAME</a>.
    The intention is to support libraries using different sets of null annotations,
    in addition to those used by the current project. Secondary null annotations should not be
    used in the project's own source code.</p>
 <p>JDT will never actively use any secondary annotation names from this list,
    i.e., inferred null annotations and content assist proposals mentioning null annotations
    are always rendered using the primary name from <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NULLABLE_ANNOTATION_NAME">COMPILER_NULLABLE_ANNOTATION_NAME</a>.</p>
 <p>This option only has an effect if the option <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a> is enabled.</p>
</td>
<td>The qualified name of a Java annotation type<br/>
<b>Default is: <code>""</code></b></td>
</tr>

<tr>
<td colspan="2"><a name="COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_NAME" id="COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_NAME"></a><b>Name of Annotation Type to specify a nullness default for unannotated types.</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_NAME">COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_NAME</a></b>)</td>
</tr>
<tr valign="top">
<td>This option defines a fully qualified Java type name that the compiler may use
   to perform special null analysis.
<p>If the annotation is applied without an argument, all unannotated types in method signatures
   within the annotated element will be treated as if they were specified with the non-null annotation
   (see <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_ANNOTATION_NAME">COMPILER_NONNULL_ANNOTATION_NAME</a>).</p>
<p>If the annotation is applied with the constant <code>false</code> as its argument,
   all corresponding defaults specified using this annotation at outer scopes will be canceled for the annotated element.</p>
 <p>This option only has an effect if the option <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a> is enabled.</p>
</td>
<td>The qualified name of a Java annotatin type<br/>
<b>Default is: <code>org.eclipse.jdt.annotation.NonNullByDefault</code></b></td>
</tr>

<tr>
<td colspan="2"><a name="COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_SECONDARY_NAMES" id="COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_SECONDARY_NAMES"></a>
<b>Names of Secondary Annotation Types to specify a nullness default for unannotated types</b> 
(<b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_SECONDARY_NAMES">COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_SECONDARY_NAMES</a></b>)</td>
</tr>
<tr valign="top">
<td>This option defines a comma-separated list of fully qualified Java type names
that the compiler may use to perform special null analysis.
<p>The annotation types identified by the names in this list are interpreted in the same way
    as the annotation identified by <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_NAME">COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_NAME</a>.
    The intention is to support libraries using different sets of null annotations,
    in addition to those used by the current project. Secondary null annotations should not be
    used in the project's own source code.</p>
 <p>This option only has an effect if the option <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a> is enabled.</p>
</td>
<td>The qualified name of a Java annotatin type<br/>
<b>Default is: <code>""</code></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Use of Annotation Type as Super Interface</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_ANNOTATION_SUPER_INTERFACE">COMPILER_PB_ANNOTATION_SUPER_INTERFACE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever an annotation
type is used as a super-interface. Though legal, this is discouraged.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Usage of 'assert' Identifier</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_ASSERT_IDENTIFIER">COMPILER_PB_ASSERT_IDENTIFIER</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever 'assert' is
used as an identifier (reserved keyword in 1.4)</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>

</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Boxing/Unboxing Conversion</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_AUTOBOXING">COMPILER_PB_AUTOBOXING</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a boxing or an
unboxing conversion is performed.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Usage of char[] Expressions in String Concatenations</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_CHAR_ARRAY_IN_STRING_CONCATENATION">COMPILER_PB_CHAR_ARRAY_IN_STRING_CONCATENATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a char[]
expression is used in String concatenations (e.g. "hello" + new char[]{'w','o','r','l','d'}).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Deprecation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_DEPRECATION">COMPILER_PB_DEPRECATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will signal use of deprecated API either as an error or
a warning.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Terminal Deprecation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_TERMINAL_DEPRECATION">COMPILER_PB_TERMINAL_DEPRECATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will signal use of terminally deprecated API either as an 
error or a warning.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>

<td colspan="2"><b>Reporting Deprecation Inside Deprecated Code</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_DEPRECATION_IN_DEPRECATED_CODE">COMPILER_PB_DEPRECATION_IN_DEPRECATED_CODE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will signal use of deprecated API inside deprecated code
either as an error or a warning.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Deprecation When Overriding Deprecated Method</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_DEPRECATION_WHEN_OVERRIDING_DEPRECATED_METHOD">COMPILER_PB_DEPRECATION_WHEN_OVERRIDING_DEPRECATED_METHOD</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will signal the declaration of a method overriding a
deprecated one.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Discouraged Reference to Type with Restricted Access</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_DISCOURAGED_REFERENCE">COMPILER_PB_DISCOURAGED_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when referring to a
type with discouraged access, as defined according to the access rule specifications.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Empty Statements and Unnecessary Semicolons</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_EMPTY_STATEMENT">COMPILER_PB_EMPTY_STATEMENT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning if an empty statement
or a unnecessary semicolon is encountered.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Usage of 'enum' Identifier</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_ENUM_IDENTIFIER">COMPILER_PB_ENUM_IDENTIFIER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever 'enum' is used
as an identifier (reserved keyword in 1.5).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Switch Fall-Through Case</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_FALLTHROUGH_CASE">COMPILER_PB_FALLTHROUGH_CASE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when a case may be
entered by falling through a preceding, non empty case.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Treating Optional Errors as Fatal</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_FATAL_OPTIONAL_ERROR">COMPILER_PB_FATAL_OPTIONAL_ERROR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When enabled, optional errors (i.e. optional problems which severity has been set
to "error") will be treated as standard compile errors, that is as fatal errors. When detecting a
fatal error in source code, the compiler generates problem methods/types into the corresponding
class files, in effect preventing the offending code from running until all issues get
resolved.<br />
When disabled, optional errors are only considered as warnings for code generation purposes, but
they still carry an error indicator to make them more severe than regular warnings.</td>
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Field Declaration Hiding another Variable</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_FIELD_HIDING">COMPILER_PB_FIELD_HIDING</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a field
declaration is hiding some field or local variable (either locally, inherited or defined in
enclosing type).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Final Bound for Type Parameter</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_FINAL_PARAMETER_BOUND">COMPILER_PB_FINAL_PARAMETER_BOUND</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a generic type
parameter is associated with a bound corresponding to a final type; since final types cannot be
further extended, the parameter is pretty useless.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Finally Blocks Not Completing Normally</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_FINALLY_BLOCK_NOT_COMPLETING">COMPILER_PB_FINALLY_BLOCK_NOT_COMPLETING</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when a finally block
does not complete normally.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Forbidden Reference to Type with Restricted Access</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_FORBIDDEN_REFERENCE">COMPILER_PB_FORBIDDEN_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when referring to a
type that is non accessible, as defined according to the access rule specifications.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR"><i>ERROR</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Missing HashCode Method</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_HASHCODE_METHOD">COMPILER_PB_MISSING_HASHCODE_METHOD</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning if a type overrides
Object.equals(Object) but does not override hashCode().</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR"><i>ERROR</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Hidden Catch Block</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_HIDDEN_CATCH_BLOCK">COMPILER_PB_HIDDEN_CATCH_BLOCK</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">Local to a try statement, some catch blocks may hide others , e.g.
<pre>
   try {
      throw new java.io.CharConversionException();
   } catch (java.io.CharConversionException e) {
   } catch (java.io.IOException e) {}.
</pre>
When enabling this option, the compiler will issue an error or a warning for hidden catch blocks
corresponding to checked exceptions.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><a name="INCLUDE_ASSERTS_IN_NULL_ANALYSIS" id=
"INCLUDE_ASSERTS_IN_NULL_ANALYSIS"></a><b>Reporting Null related problems as a consequnce of assert
statements</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_INCLUDE_ASSERTS_IN_NULL_ANALYSIS">COMPILER_PB_INCLUDE_ASSERTS_IN_NULL_ANALYSIS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will raise null related errors or warnings for a
variable that got marked as potentially or definitely <code>null</code> or not <code>null</code>

inside an assert statement, and whose null state has not been modified by any other statement
following the assert.<br />
This option has an effect only when the compiler compliance is 1.4 or greater.<br />
Note that this option is only relevant in the context of the warnings raised by the options
<a href="#REDUNDANT_NULL_CHECK">COMPILER_PB_REDUNDANT_NULL_CHECK</a>, <a href=
"#NULL_REFERENCE">COMPILER_PB_NULL_REFERENCE</a>, and <a href=
"#POTENTIAL_NULL_REFERENCE">COMPILER_PB_POTENTIAL_NULL_REFERENCE</a> as a consequence of an assert
statement.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">

<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></i></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Interface Method not Compatible with non-Inherited Methods</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_INCOMPATIBLE_NON_INHERITED_INTERFACE_METHOD">COMPILER_PB_INCOMPATIBLE_NON_INHERITED_INTERFACE_METHOD</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever an interface
defines a method incompatible with a non-inherited Object one.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>

<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Incomplete Enum Switch</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_INCOMPLETE_ENUM_SWITCH">COMPILER_PB_INCOMPLETE_ENUM_SWITCH</a></b>)</td>
</tr>
<tr valign="top">

<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever an enum switch 
statement lacks a default case. If no default case is given, additionally one error or warning is issued
regarding each enum constant for which a corresponding case label is lacking.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Indirect Reference to a Static Member</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_INDIRECT_STATIC_ACCESS">COMPILER_PB_INDIRECT_STATIC_ACCESS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a static field
or method is accessed in an indirect way. A reference to a static member should preferably be
qualified with its declaring type name.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Invalid Javadoc Comment</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_INVALID_JAVADOC">COMPILER_PB_INVALID_JAVADOC</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">This is the generic control for the severity of Javadoc problems. When enabled, the
compiler will issue an error or a warning for a problem in Javadoc.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Invalid Javadoc Tags</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_INVALID_JAVADOC_TAGS">COMPILER_PB_INVALID_JAVADOC_TAGS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will signal unbound or unexpected reference tags in
Javadoc. A 'throws' tag referencing an undeclared exception would be considered as
unexpected.<br />
Note that this diagnosis can be enabled based on the visibility of the construct associated with
the Javadoc;<br />
see also <a href=
"#INVALID_JAVADOC_TAGS_VISIBILITY">COMPILER_PB_INVALID_JAVADOC_TAGS_VISIBILITY</a>.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED"><i>DISABLED</i></a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Javadoc Tags with Deprecated References</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_INVALID_JAVADOC_TAGS__DEPRECATED_REF">COMPILER_PB_INVALID_JAVADOC_TAGS__DEPRECATED_REF</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Specify whether the compiler will report deprecated references used in Javadoc
tags.<br />
Note that this diagnosis can be enabled based on the visibility of the construct associated with
the Javadoc;<br />
see also <a href=
"#INVALID_JAVADOC_TAGS_VISIBILITY">COMPILER_PB_INVALID_JAVADOC_TAGS_VISIBILITY</a>.</td>

<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED"><i>DISABLED</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Javadoc Tags with Not Visible References</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_INVALID_JAVADOC_TAGS__NOT_VISIBLE_REF">COMPILER_PB_INVALID_JAVADOC_TAGS__NOT_VISIBLE_REF</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Specify whether the compiler will report non-visible references used in Javadoc
tags.<br />

Note that this diagnosis can be enabled based on the visibility of the construct associated with
the Javadoc;<br />
see also <a href=
"#INVALID_JAVADOC_TAGS_VISIBILITY">COMPILER_PB_INVALID_JAVADOC_TAGS_VISIBILITY</a>.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED"><i>DISABLED</i></a></b></td>
</tr>
<tr>
<td colspan="2"><a name="INVALID_JAVADOC_TAGS_VISIBILITY" id=
"INVALID_JAVADOC_TAGS_VISIBILITY"></a><b>Visibility Level For Invalid Javadoc Tags</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_INVALID_JAVADOC_TAGS_VISIBILITY">COMPILER_PB_INVALID_JAVADOC_TAGS_VISIBILITY</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">Set the minimum visibility level for Javadoc tag problems. Below this level
problems will be ignored.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#PUBLIC"><i>PUBLIC</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#PROTECTED">PROTECTED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DEFAULT">DEFAULT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#PRIVATE">PRIVATE</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Reporting Local Variable Declaration Hiding another Variable</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_LOCAL_VARIABLE_HIDING">COMPILER_PB_LOCAL_VARIABLE_HIDING</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a local
variable declaration is hiding some field or local variable (either locally, inherited or defined
in enclosing type).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>

</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Maximum number of problems reported per compilation unit</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MAX_PER_UNIT">COMPILER_PB_MAX_PER_UNIT</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="1">Specify the maximum number of problems reported on each compilation unit (if the
maximum is zero then all problems are reported).</td>
<td>A positive or null integer.<br />

<b><i>Default value is 100.</i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting a method that qualifies as static, but not declared static</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_STATIC_ON_METHOD">COMPILER_PB_MISSING_STATIC_ON_METHOD</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning if a method has not
been declared as <code>static</code>, even though it qualifies as one.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>

</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting a method that may qualify as static, but not declared static</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_POTENTIALLY_MISSING_STATIC_ON_METHOD">COMPILER_PB_POTENTIALLY_MISSING_STATIC_ON_METHOD</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning if a method has not
been declared as <code>static</code>, even though it may qualify as one, when another method
doesn't override it.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>

<td colspan="2"><b>Reporting Method With Constructor Name</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_METHOD_WITH_CONSTRUCTOR_NAME">COMPILER_PB_METHOD_WITH_CONSTRUCTOR_NAME</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">Naming a method with a constructor name is generally considered poor style
programming. When enabling this option, the compiler will signal such scenarios either as an error
or a warning.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>

<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Missing @Deprecated Annotation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_DEPRECATED_ANNOTATION">COMPILER_PB_MISSING_DEPRECATED_ANNOTATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever encountering a
declaration carrying a @deprecated doc tag but having no corresponding @Deprecated annotation.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>

</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Missing Javadoc Comments</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_COMMENTS">COMPILER_PB_MISSING_JAVADOC_COMMENTS</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="4">This is the generic control for the severity of missing Javadoc comment problems.
When enabled, the compiler will issue an error or a warning when Javadoc comments are
missing.<br />
Note that this diagnosis can be enabled based on the visibility of the construct associated with
the expected Javadoc.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>

<td colspan="2"><b>Reporting Missing Javadoc Comments on Overriding Methods</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_COMMENTS_OVERRIDING">COMPILER_PB_MISSING_JAVADOC_COMMENTS_OVERRIDING</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Specify whether the compiler will verify overriding methods in order to report
missing Javadoc comment problems.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED"><i>DISABLED</i></a></b></td>
</tr>

<tr>
<td colspan="2"><b>Visibility Level For Missing Javadoc Comments</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_COMMENTS_VISIBILITY">COMPILER_PB_MISSING_JAVADOC_COMMENTS_VISIBILITY</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">Set the minimum visibility level for missing Javadoc problems. Below this level
problems will be ignored.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#PUBLIC"><i>PUBLIC</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#PROTECTED">PROTECTED</a></b></td>

</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DEFAULT">DEFAULT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#PRIVATE">PRIVATE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting missing tag description</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAG_DESCRIPTION">COMPILER_PB_MISSING_JAVADOC_TAG_DESCRIPTION</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="4">When enabled, the compiler will report a warning or an error for any Javadoc tag
missing a required description.<br />
The severity of the problem is controlled with option <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_INVALID_JAVADOC">COMPILER_PB_INVALID_JAVADOC</a>.
It does <em>not</em> depend on option <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_INVALID_JAVADOC_TAGS">COMPILER_PB_INVALID_JAVADOC_TAGS</a>.<br />

When this option is valued to <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAG_DESCRIPTION_ALL_STANDARD_TAGS">
COMPILER_PB_MISSING_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAG_DESCRIPTION_ALL_STANDARD_TAGS">

JAVADOC_TAG_DESCRIPTION_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAG_DESCRIPTION_ALL_STANDARD_TAGS">
ALL_STANDARD_TAGS</a>, a subset of the standard <a href=
"http://download.oracle.com/javase/6/docs/technotes/tools/windows/javadoc.html#javadoctags">Javadoc
tags</a> that have a description, text or label are checked. While this set may grow in the future,
note that user-defined tags are not and will not be checked.</td>
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAG_DESCRIPTION_RETURN_TAG">
COMPILER_PB_MISSING_</a><br />
<a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAG_DESCRIPTION_RETURN_TAG">
JAVADOC_TAG_DESCRIPTION_RETURN_TAG</a></i></b></td>
</tr>
<tr valign="top">

<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAG_DESCRIPTION_ALL_STANDARD_TAGS">
COMPILER_PB_MISSING_</a><br />
<a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAG_DESCRIPTION_ALL_STANDARD_TAGS">
JAVADOC_TAG_DESCRIPTION_ALL_STANDARD_TAGS</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAG_DESCRIPTION_NO_TAG">
COMPILER_PB_MISSING_</a><br />
<a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAG_DESCRIPTION_NO_TAG">
JAVADOC_TAG_DESCRIPTION_NO_TAG</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Missing Javadoc Tags</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAGS">COMPILER_PB_MISSING_JAVADOC_TAGS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">This is the generic control for the severity of Javadoc missing tag problems. When
enabled, the compiler will issue an error or a warning when tags are missing in Javadoc
comments.<br />
Note that this diagnosis can be enabled based on the visibility of the construct associated with
the Javadoc.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Missing Javadoc Tags on Overriding Methods</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAGS_OVERRIDING">COMPILER_PB_MISSING_JAVADOC_TAGS_OVERRIDING</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Specify whether the compiler will verify overriding methods in order to report
Javadoc missing tag problems.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED"><i>DISABLED</i></a></b></td>

</tr>
<tr>
<td colspan="2"><b>Reporting Missing Javadoc Tags for Method Type Parameters</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAGS_METHOD_TYPE_PARAMETERS">COMPILER_PB_MISSING_JAVADOC_TAGS_METHOD_TYPE_PARAMETERS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Specify whether a missing <code>@param</code> for a type parameter in a method
declaration should be reported. When enabled, the compiler will issue a missing Javadoc tag error
or warning for a type parameter without a corresponding <code>@param</code> tag.<br />

This option only has an effect if the compiler compliance is 1.5 or greater.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED"><i>DISABLED</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Visibility Level For Missing Javadoc Tags</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_JAVADOC_TAGS_VISIBILITY">COMPILER_PB_MISSING_JAVADOC_TAGS_VISIBILITY</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="4">Set the minimum visibility level for Javadoc missing tag problems. Below this level
problems will be ignored.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#PUBLIC"><i>PUBLIC</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#PROTECTED">PROTECTED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DEFAULT">DEFAULT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#PRIVATE">PRIVATE</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Reporting Missing @Override Annotation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_OVERRIDE_ANNOTATION">COMPILER_PB_MISSING_OVERRIDE_ANNOTATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever encountering a
method declaration which overrides a superclass method but has no @Override annotation.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Missing <code>@Override</code> Annotation For Interface Method
Implementation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_OVERRIDE_ANNOTATION_FOR_INTERFACE_METHOD_IMPLEMENTATION">COMPILER_PB_MISSING_OVERRIDE_ANNOTATION_FOR_INTERFACE_METHOD_IMPLEMENTATION</a></b>)</td>
</tr>
<tr valign="top">

<td rowspan="2">When enabled, the compiler will issue an error or a warning whenever encountering a
method declaration which overrides or implements a superinterface method but has no
<code>@Override</code> annotation.<br />
This option only has an effect if the compiler compliance is 1.6 or greater.<br />
The severity of the problem is controlled with option <b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_OVERRIDE_ANNOTATION">COMPILER_PB_MISSING_OVERRIDE_ANNOTATION</a></b>.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED"><i>ENABLED</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Reporting Missing Declaration of serialVersionUID Field on Serializable
Class</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_SERIAL_VERSION">COMPILER_PB_MISSING_SERIAL_VERSION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a serializable
class is missing a local declaration of a serialVersionUID field. This field must be declared as
static final and be of type long.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>

<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Assignment with No Effect</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NO_EFFECT_ASSIGNMENT">COMPILER_PB_NO_EFFECT_ASSIGNMENT</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever an assignment
has no effect (e.g. 'x = x').</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>

</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Non-Externalized String Literal</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NON_NLS_STRING_LITERAL">COMPILER_PB_NON_NLS_STRING_LITERAL</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning for non externalized
String literal (i.e. non tagged with //$NON-NLS-&lt;n&gt;$).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>

<tr>
<td colspan="2"><a name="NONNULL_PARAMETER_ANNOTATION_DROPPED" id="NONNULL_PARAMETER_ANNOTATION_DROPPED"></a><b>Reporting Dropped Nonnull Parameter Annotations</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NONNULL_PARAMETER_ANNOTATION_DROPPED">COMPILER_PB_NONNULL_PARAMETER_ANNOTATION_DROPPED</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">
When enabled, the compiler will issue an error or a warning against a parameter of 
a method that overrides an inherited method if all of the following hold:
<ul>
<li>The overridden method declares the corresponding parameter as non-null (see <a href="#COMPILER_NONNULL_ANNOTATION_NAME">COMPILER_NONNULL_ANNOTATION_NAME</a>).</li>
<li>The parameter in the overriding method has no null annotation.</li>
<li>The overriding method is not affected by a nullness default (see <a href="#COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_NAME">COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_NAME</a>).</li>
<li>Inheritance of null annotations is disabled (see <a href="#COMPILER_INHERIT_NULL_ANNOTATIONS">COMPILER_INHERIT_NULL_ANNOTATIONS</a>).</li>
</ul>
This particular situation bears the same inherent risk as any unannotated method parameter,
because the compiler's null ananysis cannot decide wither <code>null</code> is or is not a legal value for this parameter.
However, the annotation in the overridden method <em>suggests</em> that the parameter should also be annotated as non-null.
If that is not intended or possible, it is recommended to annotate the parameter as nullable,
in order to make this (legal) change of contract explicit.
</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>

<tr>
<td colspan="2"><a name="COMPILER_PB_NONNULL_TYPEVAR_FROM_LEGACY_INVOCATION" id="COMPILER_PB_NONNULL_TYPEVAR_FROM_LEGACY_INVOCATION"></a><b>Reporting Unsafe NonNull Interpretation Of Type Variables</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NONNULL_TYPEVAR_FROM_LEGACY_INVOCATION">COMPILER_PB_NONNULL_TYPEVAR_FROM_LEGACY_INVOCATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">
When enabled, the compiler will issue an error or a warning against a method call
if all of the following hold:
<ul>
<li>The method's declared return type is a type variable without any null annotation.</li>
<li>For the given invocation this type variable is substituted with a nonnull type.</li>
<li>The type declaring the method is provided by a third-party library.</li>
<li>No null annotations exist for this library type, neither in its class file nor using external annotations.</li>
</ul>
<p>This particular situation leverages the option to consistently substitute all occurrences of a type variable
with a nonnull type, but it bears the risk that the library type may not be aware of null annotations thus lacking
a necessary <code>@Nullable</code> annotation for a particular occurrence of a type variable.</p>
<p>This option only has an effect if the option <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a> is enabled and when
the configured set of null annotations declares the target <code>TYPE_USE</code>.</p>
</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>

<tr>
<td colspan="2"><a name="NULL_REFERENCE" id="NULL_REFERENCE"></a><b>Reporting Null Dereference</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_REFERENCE">COMPILER_PB_NULL_REFERENCE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a variable
that is statically known to hold a null value is used to access a field or method.<br />
Errors or warnings raised due to this option arising as a consequence of asserts can be controlled
by <a href="#INCLUDE_ASSERTS_IN_NULL_ANALYSIS">COMPILER_PB_INCLUDE_ASSERTS_IN_NULL_ANALYSIS</a>
(java 1.4 and greater)</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting unchecked conversion from a type with unknown nullness to a null annotated type</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_UNCHECKED_CONVERSION">COMPILER_PB_NULL_UNCHECKED_CONVERSION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever one of the
 following situations is detected:
 <ol>
 <li>A method declared with a nonnull annotation returns an expression for which
     insufficient nullness information is available for statically proving that no
     flow will pass a null value at runtime.</li>
 <li>An expression for which insufficient nullness information is available for
     statically proving that it will never evaluate to a null value at runtime
     is passed as an argument in a method call where the corresponding parameter of
     the called method is declared with a nonnull annotation.</li>
 <li>An expression for which insufficient nullness information is available for
     statically proving that it will never evaluate to a null value at runtime
     is assigned to a local variable that is declared with a nonnull annotation.</li>
 </ol>
 Unchecked null conversion is usually a consequence of using other unannotated
 variables or methods.
<p>The compiler options <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_ANNOTATION_NAME">COMPILER_NONNULL_ANNOTATION_NAME</a> and
   <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NULLABLE_ANNOTATION_NAME">COMPILER_NULLABLE_ANNOTATION_NAME</a> control which annotations the compiler
   shall interpret as nonnull or nullable annotations, respectively.</p>
<p>This option only has an effect if the option <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a> is enabled.</p>
</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr>
<td><b><i><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting problems detected by pessimistic null analysis for free type variables</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_PESSIMISTIC_NULL_ANALYSIS_FOR_FREE_TYPE_VARIABLES">COMPILER_PB_PESSIMISTIC_NULL_ANALYSIS_FOR_FREE_TYPE_VARIABLES</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">Unless set to <code>"ignore"</code>, type variables not affected by any explicit null annotation are pessimistically analyzed
    in two directions: When reading a value of this type, it is assumed to be nullable. When this type appears as the required type
    (i.e., at the left hand side of an assignment or variable initialization, or as the method return type against which a return statement
    is being checked) the type is considered to require the nonnull property.
    <p>Problems reported due to this pessimistic analysis are reported with the level given in this option.</p>
</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr>
<td><b><i><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Violations of Null Specifications</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_SPECIFICATION_VIOLATION">COMPILER_PB_NULL_SPECIFICATION_VIOLATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will issue an error or a warning whenever one of the
following situations is detected:
<ol>
<li>A method declared with a nonnull annotation returns a <em>nullable</em> expression.</li>
<li>A <em>nullable</em> expression is passed as an argument in a method call where the corresponding parameter of the called
    method is declared with a nonnull annotation.</li>
<li>A <em>nullable</em> expression is assigned to a local variable that is declared with a nonnull annotation.</li>
<li>A method that overrides an inherited method declared with a nonnull annotation
    tries to relax that contract by specifying a nullable annotation
    (prohibition of contravariant return).</li>
<li>A method that overrides an inherited method which has a nullable declaration
    for at least one of its parameters, tries to tighten that null contract by
    specifying a nonnull annotation for its corresponding parameter
    (prohibition of covariant parameters).</li>
</ol>
<p>In the above an expression is considered as <em>nullable</em> if either it is statically known 
   to evaluate to the value <code>null</code>, or if it is declared with a nullable annotation.</p>
<p>The compiler options <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_ANNOTATION_NAME">COMPILER_NONNULL_ANNOTATION_NAME</a> and
   <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NULLABLE_ANNOTATION_NAME">COMPILER_NULLABLE_ANNOTATION_NAME</a> control which annotations the compiler
   shall interpret as nonnull or nullable annotations, respectively.</p>
<p>This option only has an effect if the option <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a> is enabled.</p>
</td>
<td><b><i><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Overriding Methods that do not call their super method invocation.</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_OVERRIDING_METHOD_WITHOUT_SUPER_INVOCATION">COMPILER_PB_OVERRIDING_METHOD_WITHOUT_SUPER_INVOCATION</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning if a method is
overriding another method without calling the super invocation.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><a name="POTENTIAL_NULL_REFERENCE" id="POTENTIAL_NULL_REFERENCE"></a><b>Reporting
Potential Null Dereference</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_POTENTIAL_NULL_REFERENCE">COMPILER_PB_POTENTIAL_NULL_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a variable
that has formerly been tested against null but is not (no more) statically known to hold a non-null
value is used to access a field or method.<br />
Errors or warnings raised due to this option arising as a consequence of asserts can be controlled
by <a href="#INCLUDE_ASSERTS_IN_NULL_ANALYSIS">COMPILER_PB_INCLUDE_ASSERTS_IN_NULL_ANALYSIS</a>
(java 1.4 and greater)</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting conflicts between declared null annotation and inferred null value</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_NULL_ANNOTATION_INFERENCE_CONFLICT">COMPILER_PB_NULL_ANNOTATION_INFERENCE_CONFLICT</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever one of the
following situations is detected:
<ol>
<li>A method declared with a nonnull annotation returns an expression that is
	statically known to evaluate to a null value on some flow.</li>
<li>An expression that is statically known to evaluate to a null value on some flow
	is passed as an argument in a method call where the corresponding parameter of
	the called method is declared with a nonnull annotation.</li>
<li>An expression that is statically known to evaluate to a null value on some flow
	is assigned to a local variable that is declared with a nonnull annotation.</li>
</ol>

<p>The compiler options <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_ANNOTATION_NAME">COMPILER_NONNULL_ANNOTATION_NAME</a> and
   <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NULLABLE_ANNOTATION_NAME">COMPILER_NULLABLE_ANNOTATION_NAME</a> control which annotations the compiler
   shall interpret as nonnull or nullable annotations, respectively.</p>
<p>This option only has an effect if the option <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a> is enabled.</p>
</td>
<td><b><i><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>

<tr>
<td colspan="2"><a name="REDUNDANT_NULL_CHECK" id="REDUNDANT_NULL_CHECK"></a><b>Reporting Redundant
Null Check</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_REDUNDANT_NULL_CHECK">COMPILER_PB_REDUNDANT_NULL_CHECK</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a variable
that is statically known to hold a null or a non-null value is tested against null.<br />
Errors or warnings raised due to this option arising as a consequence of asserts can be controlled
by <a href="#INCLUDE_ASSERTS_IN_NULL_ANALYSIS">COMPILER_PB_INCLUDE_ASSERTS_IN_NULL_ANALYSIS</a>

(java 1.4 and greater)</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Redundant Null Annotations.</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_REDUNDANT_NULL_ANNOTATION">COMPILER_PB_REDUNDANT_NULL_ANNOTATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when a non-null annotation
(see <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_ANNOTATION_NAME">COMPILER_NONNULL_ANNOTATION_NAME</a>)
is applied although the same effect is already achieved by a default applicable at the
current location. Such a default may be effective by using the annotation specified by the option
<a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_NAME">COMPILER_NONNULL_BY_DEFAULT_ANNOTATION_NAME</a>.
<p>The compiler options <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NONNULL_ANNOTATION_NAME">COMPILER_NONNULL_ANNOTATION_NAME</a> and
   <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_NULLABLE_ANNOTATION_NAME">COMPILER_NULLABLE_ANNOTATION_NAME</a> control which annotations the compiler
   shall interpret as nonnull or nullable annotations, respectively.
</p>
<p>This option only has an effect if the option <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a> is enabled.</p>
</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting missing default nullness annotation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_MISSING_NONNULL_BY_DEFAULT_ANNOTATION">COMPILER_PB_MISSING_NONNULL_BY_DEFAULT_ANNOTATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4"><p>When enabled, the compiler will issue an error or a warning in the following cases:</p>
<ul>
<li> When a package does not contain a default nullness annotation, as a result of missing package-info.java 
or missing default nullness annotation in package-info.java.</li>
<li> When a type inside a default package does not contain a default nullness annotation.</li>
</ul>
<p>This option only has an effect if the option <a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_ANNOTATION_NULL_ANALYSIS">COMPILER_ANNOTATION_NULL_ANALYSIS</a> is enabled.</p>
</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>

<tr>
<td colspan="2"><a name="REDUNDANT_TYPE_ARGUMENTS" id="REDUNDANT_TYPE_ARGUMENTS"></a><b>Reporting Redundant
Specification of type arguments for generic class instance creation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_REDUNDANT_TYPE_ARGUMENTS">COMPILER_PB_REDUNDANT_TYPE_ARGUMENTS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever type arguments
are specified in a generic instance creation expression, although the diamond operator '&lt;&gt;' could have
been used instead.<br />

(java 1.7 and greater)</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Attempt to Override Package Visible Method</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_OVERRIDING_PACKAGE_DEFAULT_METHOD">COMPILER_PB_OVERRIDING_PACKAGE_DEFAULT_METHOD</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">A package visible method, which is any method that is not explicitly declared as
public, protected or private, is not visible from other packages, and thus cannot be overridden
from another package. Attempting to override a package visible method from another package
introduces a new method that is unrelated to the original one. When enabling this option, the
compiler will signal such situations as an error or a warning.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Parameter Assignment</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_PARAMETER_ASSIGNMENT">COMPILER_PB_PARAMETER_ASSIGNMENT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning if a parameter is
assigned to.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Possible Accidental Boolean Assignment</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_POSSIBLE_ACCIDENTAL_BOOLEAN_ASSIGNMENT">COMPILER_PB_POSSIBLE_ACCIDENTAL_BOOLEAN_ASSIGNMENT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning if a boolean assignment
is acting as the condition of a control statement (where it probably was meant to be a boolean
comparison).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Raw Type Reference</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_RAW_TYPE_REFERENCE">COMPILER_PB_RAW_TYPE_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when detecting
references to raw types. Raw types are discouraged, and are intended to help interfacing with
legacy code. In the future, the language specification may reject raw references to generic
types.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Redundant Superinterface</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_REDUNDANT_SUPERINTERFACE">COMPILER_PB_REDUNDANT_SUPERINTERFACE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning if a type explicitly
implements an interface that is already implemented by any of its supertypes.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Special Parameter Hiding another Field</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_SPECIAL_PARAMETER_HIDING_FIELD">COMPILER_PB_SPECIAL_PARAMETER_HIDING_FIELD</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will signal cases where a constructor or setter method
parameter declaration is hiding some field (either locally, inherited or defined in enclosing
type).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED"><i>DISABLED</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Non-Static Reference to a Static Member</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_STATIC_ACCESS_RECEIVER">COMPILER_PB_STATIC_ACCESS_RECEIVER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a static field
or method is accessed with an expression receiver.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Further Determining the Effect of <code>@SuppressWarnings</code> if also
COMPILER_PB_SUPPRESS_WARNINGS is enabled.</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_SUPPRESS_OPTIONAL_ERRORS">COMPILER_PB_SUPPRESS_OPTIONAL_ERRORS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When enabled, the <code>@SuppressWarnings</code> annotation can additionally be
used to suppress optional compiler diagnostics that have been configured as ERROR.<br />
When disabled, all <code>@SuppressWarnings</code> annotations only affects warnings.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED"><i>DISABLED</i></a></b></td>

</tr>
<tr>
<td colspan="2"><b>Determining Effect of @SuppressWarnings</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_SUPPRESS_WARNINGS">COMPILER_PB_SUPPRESS_WARNINGS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, the @SuppressWarnings annotation can be used to suppress some
compile warnings.<br />
When disabled, all @SupressWarnings annotations are ignored; i.e., warnings are reported even when
they occur in the scope of an entity that carries an @SuppressWarnings annotation.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED"><i>ENABLED</i></a></b></td>
</tr>

<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Perform syntactic null analysis for fields</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_SYNTACTIC_NULL_ANALYSIS_FOR_FIELDS">COMPILER_PB_SYNTACTIC_NULL_ANALYSIS_FOR_FIELDS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will detect certain syntactic constellations where
a null related warning against a field reference would normally be raised but can be suppressed
at low risk given that the same field reference was known to be non-null immediately before.
</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLES">ENABLED</a></b></td>
</tr>
<tr>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED"><i>DISABLED</i></a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Synthetic Access Emulation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_SYNTHETIC_ACCESS_EMULATION">COMPILER_PB_SYNTHETIC_ACCESS_EMULATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever it emulates
access to a non-accessible member of an enclosing type. Such access can have performance
implications.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>

<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Type Parameter Declaration Hiding another Type</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_TYPE_PARAMETER_HIDING">COMPILER_PB_TYPE_PARAMETER_HIDING</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a type
parameter declaration is hiding some type.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Unavoidable Generic Type Problems due to raw APIs</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNAVOIDABLE_GENERIC_TYPE_PROBLEMS">COMPILER_PB_UNAVOIDABLE_GENERIC_TYPE_PROBLEMS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will issue an error or warning even when it detects a generics-related type problem
that could not have been avoided by the programmer, because a referenced API already contains raw types.
As an example, a type may be forced to use raw types
in its method signatures and return types because the methods it overrides from a super type are declared to
use raw types in the first place.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED"><i>ENABLED</i></a></b></td>
</tr>

<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Unchecked Type Operation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNCHECKED_TYPE_OPERATION">COMPILER_PB_UNCHECKED_TYPE_OPERATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever an operation
involves generic types, and potentially invalidates type safety since involving raw types (e.g.
invoking #foo(X&lt;String&gt;) with arguments (X)).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Unclosed Closeable</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNCLOSED_CLOSEABLE">COMPILER_PB_UNCLOSED_CLOSEABLE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning if
	 a local variable holds a value of type <code>java.lang.AutoCloseable</code> (compliance &gt;= 1.7) 
	 or a value of type <code>java.io.Closeable</code> (compliance &lt;= 1.6) and if
	 flow analysis shows that the method <code>close()</code> is not invoked locally on that value.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Potentially Unclosed Closeable</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_POTENTIALLY_UNCLOSED_CLOSEABLE">COMPILER_PB_POTENTIALLY_UNCLOSED_CLOSEABLE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning if
	 a local variable holds a value of type <code>java.lang.AutoCloseable</code> (compliance &gt;= 1.7) 
	 or a value of type <code>java.io.Closeable</code> (compliance &lt;= 1.6) and if
	 flow analysis shows that the method <code>close()</code> is 
	 not invoked locally on that value for all execution paths.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Explicitly Closed Closeable</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_EXPLICITLY_CLOSED_AUTOCLOSEABLE">COMPILER_PB_EXPLICITLY_CLOSED_AUTOCLOSEABLE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning if a local variable 
	 holds a value of type <code>java.lang.AutoCloseable</code>, and if the method
	 <code>close()</code> is explicitly invoked on that resource, but the resource is
	 not managed by a try-with-resources block.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr><tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>


<tr>
<td colspan="2"><b>Reporting a method invocation providing an argument of an unlikely type</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNLIKELY_COLLECTION_METHOD_ARGUMENT_TYPE">COMPILER_PB_UNLIKELY_COLLECTION_METHOD_ARGUMENT_TYPE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or warning when certain well-known 
Collection methods that take an 'Object', like e.g. <code>Map.get(Object)</code>, are used with an 
argument type that seems to be not related to the corresponding type argument of the Collection.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr><tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>


<tr>
<td colspan="2"><b>Perform strict analysis against the expected type of collection methods</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNLIKELY_COLLECTION_METHOD_ARGUMENT_TYPE_STRICT">COMPILER_PB_UNLIKELY_COLLECTION_METHOD_ARGUMENT_TYPE_STRICT</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">This is a sub-option of 
<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNLIKELY_COLLECTION_METHOD_ARGUMENT_TYPE">COMPILER_PB_UNLIKELY_COLLECTION_METHOD_ARGUMENT_TYPE</a></b>, 
which will replace the heuristics with strict compatibility checks, i.e., each argument that is not 
strictly compatible with the expected type will trigger an error or warning.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting a method invocation providing an argument of an unlikely type to method 'equals'</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNLIKELY_EQUALS_ARGUMENT_TYPE">COMPILER_PB_UNLIKELY_EQUALS_ARGUMENT_TYPE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or warning when <code>java.lang.Object.equals(Object)</code>
is used with an argument type that seems to be not related to the receiver's type, 
or correspondingly when the arguments of <code>java.util.Objects.equals(Object, Object)</code>
have types that seem to be not related to each other.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr><tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting when public API uses a non-API type</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_API_LEAKS">COMPILER_PB_API_LEAKS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or warning when public API 
mentions a type that is not accessible to clients.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr><tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>

<tr>
<td colspan="2"><b>Reporting Undocumented Empty Block</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNDOCUMENTED_EMPTY_BLOCK">COMPILER_PB_UNDOCUMENTED_EMPTY_BLOCK</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when an empty block is
detected and it is not documented with any comment.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unhandled Warning Token for @SuppressWarnings</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNHANDLED_WARNING_TOKEN">COMPILER_PB_UNHANDLED_WARNING_TOKEN</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when encountering a
token it cannot handle inside a @SuppressWarnings annotation.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>

</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unnecessary Else</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNNECESSARY_ELSE">COMPILER_PB_UNNECESSARY_ELSE</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when a statement is
unnecessarily nested within an else clause (in situation where then clause is not completing
normally).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unnecessary Type Check</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNNECESSARY_TYPE_CHECK">COMPILER_PB_UNNECESSARY_TYPE_CHECK</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when a cast or an
instanceof operation is unnecessary.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unqualified Access to Field</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNQUALIFIED_FIELD_ACCESS">COMPILER_PB_UNQUALIFIED_FIELD_ACCESS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when a field is access
without any qualification. In order to improve code readability, it should be qualified, e.g. 'x'
should rather be written 'this.x'.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unused Declared Thrown Exception</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION">COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when a method or a
constructor is declaring a checked exception as thrown, but its body actually raises neither that
exception, nor any other exception extending it.<br />
This diagnostic is further tuned by options <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_EXEMPT_EXCEPTION_AND_THROWABLE">
COMPILER_PB_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_EXEMPT_EXCEPTION_AND_THROWABLE">
UNUSED_DECLARED_THROWN_EXCEPTION_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_EXEMPT_EXCEPTION_AND_THROWABLE">
EXEMPT_EXCEPTION_AND_THROWABLE</a>, <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_INCLUDE_DOC_COMMENT_REFERENCE">
COMPILER_PB_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_INCLUDE_DOC_COMMENT_REFERENCE">

UNUSED_DECLARED_THROWN_EXCEPTION_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_INCLUDE_DOC_COMMENT_REFERENCE">
INCLUDE_DOC_COMMENT_REFERENCE</a>, and <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_WHEN_OVERRIDING">
COMPILER_PB_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_WHEN_OVERRIDING">
UNUSED_DECLARED_THROWN_EXCEPTION_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_WHEN_OVERRIDING">
WHEN_OVERRIDING</a>.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>

</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unused Declared Thrown Exception Exempts Exception And Throwable</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_EXEMPT_EXCEPTION_AND_THROWABLE">COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_EXEMPT_EXCEPTION_AND_THROWABLE</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="2">When enabled, the compiler will issue an error or a warning when a method or a
constructor is declaring a checked exception else than <code>java.lang.Throwable</code> or
<code>java.lang.Exception</code> as thrown, but its body actually raises neither that exception,
nor any other exception extending it. When disabled, the compiler will issue an error or a warning
when a method or a constructor is declaring a checked exception (including
<code>java.lang.Throwable</code> and <code>java.lang.Exception</code>) as thrown, but its body
actually raises neither that exception, nor any other exception extending it.<br />
The severity of the unused declared thrown exception problem is controlled with option <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION">COMPILER_PB_</a>

<a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION">UNUSED_DECLARED_</a>
<a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION">THROWN_EXCEPTION</a>.<br />

This diagnostic is further tuned by options <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_INCLUDE_DOC_COMMENT_REFERENCE">
COMPILER_PB_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_INCLUDE_DOC_COMMENT_REFERENCE">
UNUSED_DECLARED_THROWN_EXCEPTION_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_INCLUDE_DOC_COMMENT_REFERENCE">
INCLUDE_DOC_COMMENT_REFERENCE</a> and <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_WHEN_OVERRIDING">

COMPILER_PB_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_WHEN_OVERRIDING">
UNUSED_DECLARED_THROWN_EXCEPTION_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_WHEN_OVERRIDING">
WHEN_OVERRIDING</a>.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED"><i>ENABLED</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>
<tr>

<td colspan="2"><b>Consider Reference in Doc Comment for Unused Declared Thrown Exception Check</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_INCLUDE_DOC_COMMENT_REFERENCE">COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_INCLUDE_DOC_COMMENT_REFERENCE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will consider doc comment references to exceptions (i.e.
<code>@throws</code> clauses) for the unused declared thrown exception check. Thus, documented
exceptions will be considered as mandated as per doc contract.<br />
The severity of the unused declared thrown exception problem is controlled with option <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION">COMPILER_PB_</a>
<a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION">UNUSED_DECLARED_</a>

<a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION">THROWN_EXCEPTION</a>.<br />

Note: this option has no effect until the doc comment support is enabled according to the option
<a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_DOC_COMMENT_SUPPORT">COMPILER_DOC_COMMENT_SUPPORT</a>.<br />

This diagnostic is further tuned by options <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_EXEMPT_EXCEPTION_AND_THROWABLE">
COMPILER_PB_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_EXEMPT_EXCEPTION_AND_THROWABLE">
UNUSED_DECLARED_THROWN_EXCEPTION_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_EXEMPT_EXCEPTION_AND_THROWABLE">

EXEMPT_EXCEPTION_AND_THROWABLE</a> and <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_WHEN_OVERRIDING">
COMPILER_PB_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_WHEN_OVERRIDING">
UNUSED_DECLARED_THROWN_EXCEPTION_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_WHEN_OVERRIDING">
WHEN_OVERRIDING</a>.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED"><i>ENABLED</i></a></b></td>
</tr>
<tr valign="top">

<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unused Declared Thrown Exception in Overriding Method</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_WHEN_OVERRIDING">COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_WHEN_OVERRIDING</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When disabled, the compiler will report unused declared thrown exceptions neither
on overriding methods nor on implementing methods.<br />
The severity of the unused declared thrown exception problem is controlled with option <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION">COMPILER_PB_</a>

<a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION">UNUSED_DECLARED_</a>
<a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION">THROWN_EXCEPTION</a>.<br />

This diagnostic is further tuned by options <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_EXEMPT_EXCEPTION_AND_THROWABLE">
COMPILER_PB_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_EXEMPT_EXCEPTION_AND_THROWABLE">
UNUSED_DECLARED_THROWN_EXCEPTION_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_EXEMPT_EXCEPTION_AND_THROWABLE">
EXEMPT_EXCEPTION_AND_THROWABLE</a> and <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_INCLUDE_DOC_COMMENT_REFERENCE">

COMPILER_PB_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_INCLUDE_DOC_COMMENT_REFERENCE">
UNUSED_DECLARED_THROWN_EXCEPTION_</a> <a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_DECLARED_THROWN_EXCEPTION_INCLUDE_DOC_COMMENT_REFERENCE">
INCLUDE_DOC_COMMENT_REFERENCE</a>.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED"><i>DISABLED</i></a></b></td>
</tr>
<tr>

<td colspan="2"><b>Reporting Unreferenced Label</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_LABEL">COMPILER_PB_UNUSED_LABEL</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when encountering a
labeled statement which label is never explicitly referenced. A label is considered to be
referenced if its name explicitly appears within a break or continue statement; for instance the
following label would be considered unreferenced:<br />
<code>LABEL: { break; }</code></td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unused Type Parameter</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_TYPE_PARAMETER">COMPILER_PB_UNUSED_TYPE_PARAMETER</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning for unused type parameter.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unused Import</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_IMPORT">COMPILER_PB_UNUSED_IMPORT</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning for unused import
reference.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unused Local</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_LOCAL">COMPILER_PB_UNUSED_LOCAL</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning for unused local
variables (i.e. variables never read from).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Allocation of an Unused Object</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_OBJECT_ALLOCATION">COMPILER_PB_UNUSED_OBJECT_ALLOCATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning if an object is
allocated but never used, neither by holding a reference nor by invoking one of the object's
methods.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unused Parameter</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_PARAMETER">COMPILER_PB_UNUSED_PARAMETER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning for unused method
parameters (i.e. parameters never read from).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unused Parameter if Implementing Abstract Method</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_PARAMETER_WHEN_IMPLEMENTING_ABSTRACT">COMPILER_PB_UNUSED_PARAMETER_WHEN_IMPLEMENTING_ABSTRACT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will signal unused parameters in abstract method
implementations.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unused Parameter if Overriding Concrete Method</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_PARAMETER_WHEN_OVERRIDING_CONCRETE">COMPILER_PB_UNUSED_PARAMETER_WHEN_OVERRIDING_CONCRETE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will signal unused parameters in methods overriding
concrete ones.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Consider Reference in Doc Comment for Unused Parameter Check</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_PARAMETER_INCLUDE_DOC_COMMENT_REFERENCE">COMPILER_PB_UNUSED_PARAMETER_INCLUDE_DOC_COMMENT_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When enabled, the compiler will consider doc comment references to parameters (i.e.
@param clauses) for the unused parameter check. Thus, documented parameters will be considered as
mandated as per doc contract.<br />
The severity of the unused parameter problem is controlled with option
"org.eclipse.jdt.core.compiler.problem.unusedParameter"<br />
. Note: this option has no effect until the doc comment support is enabled according to the option
"org.eclipse.jdt.core.compiler.doc.comment.support".</td>
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unused Exception Parameter</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_EXCEPTION_PARAMETER">COMPILER_PB_UNUSED_EXCEPTION_PARAMETER</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning for unused exception
parameters (that is, the thrown exception is never read from).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unused Private Members</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_PRIVATE_MEMBER">COMPILER_PB_UNUSED_PRIVATE_MEMBER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a private
method or field is declared but never used within the same unit.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Presence of Type Arguments for a Non-Generic Method Invocation</b>

(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_TYPE_ARGUMENTS_FOR_METHOD_INVOCATION">COMPILER_PB_UNUSED_TYPE_ARGUMENTS_FOR_METHOD_INVOCATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever type arguments
are encountered for a non-generic method invocation.<br />
Note that prior to compliance level <code>"1.7"</code>, this situation would automatically result
into an error. From Java 7 on, unused type arguments are tolerated, and optionally warned
against.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Unnecessary <code>@SuppressWarnings</code></b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_UNUSED_WARNING_TOKEN">COMPILER_PB_UNUSED_WARNING_TOKEN</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">When enabled, the compiler will issue an error or a warning when encountering a
<code>@SuppressWarnings</code> annotation for which no corresponding warning got detected in the
code. This diagnostic is provided to help developers to get rid of transient

<code>@SuppressWarnings</code> that are no longer needed.<br />
Note that <code>@SuppressWarnings("all")</code> is still silencing the warning for unnecessary
<code>@SuppressWarnings</code>, as it is the master switch to silence <em>all</em> warnings.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>

<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Varargs Argument Needing a Cast in Method/Constructor Inv</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_VARARGS_ARGUMENT_NEED_CAST">COMPILER_PB_VARARGS_ARGUMENT_NEED_CAST</a></b>)</td>
</tr>
<tr valign="top">

<td rowspan="4">When enabled, the compiler will issue an error or a warning whenever a varargs
arguments should be cast when passed to a method/constructor invocation. (e.g.
Class.getMethod(String name, Class ... args ) invoked with arguments ("foo", null)).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Setting Source Compatibility Mode</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_SOURCE">COMPILER_SOURCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="13">Specify the compatibility level of the Java source code.<br />
Source level "1.4" enables assertions. From "1.4" on, 'assert' is a reserved keyword.<br />
Source level "1.5" enables generics, autoboxing, covariance, annotations, enumerations enhanced for
loops, static imports and varargs. From "1.5" on, 'enum' is a reserved keyword.<br />
The compliance, source and target levels must satisfy a set of constraints summarized in a <a href=
"#compatibility"><b>compatibility table</b></a> below.</td>
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_3">VERSION_1_3</a></i></b></td>
</tr>
<tr valign="top">

<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_4">VERSION_1_4</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_5">VERSION_1_5</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_6">VERSION_1_6</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_7">VERSION_1_7</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_1_8">VERSION_1_8</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_9">VERSION_9</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_10">VERSION_10</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_11">VERSION_11</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_12">VERSION_12</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_13">VERSION_13</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_14">VERSION_14</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#VERSION_15">VERSION_15</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Generating Source Debug Attribute</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_SOURCE_FILE_ATTR">COMPILER_SOURCE_FILE_ATTR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When generated, this attribute will enable the debugger to present the
corresponding source code.</td>
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#GENERATE">GENERATE</a></i></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_GENERATE">DO_NOT_GENERATE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Determine whether task tags are case-sensitive</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_TASK_CASE_SENSITIVE">COMPILER_TASK_CASE_SENSITIVE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">When enabled, task tags are considered in a case-sensitive way.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED"><i>ENABLED</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Define the Automatic Task Priorities</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_TASK_PRIORITIES">COMPILER_TASK_PRIORITIES</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="1">
<p>In parallel with the Automatic Task Tags, this list defines the priorities (high, normal or low)
of the task markers issued by the compiler.<br />
Possible priorities are "<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_TASK_PRIORITY_HIGH">HIGH</a></b>",
"<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_TASK_PRIORITY_NORMAL">NORMAL</a></b>"
or "<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_TASK_PRIORITY_LOW">LOW</a></b>".</p>
</td>
<td>{&lt;priority&gt;[,&lt;priority&gt;]*}.<br />

<b><i>Default value is "NORMAL,HIGH,<br />
NORMAL"</i></b></td>
</tr>
<tr>
<td colspan="2"><b>Define the Automatic Task Tags</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_TASK_TAGS">COMPILER_TASK_TAGS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="1">When the tag list is not empty, the compiler will issue a task marker whenever it
encounters one of the corresponding tags inside any comment in Java source code. Generated task
messages will start with the tag, and range until the next line separator, comment ending, or
tag.<br />
When a given line of code bears multiple tags, each tag will be reported separately. Moreover, a
tag immediately followed by another tag will be reported using the contents of the next non-empty
tag of the line, if any.<br />

Note that tasks messages are trimmed. If a tag is starting with a letter or digit, then it cannot
be leaded by another letter or digit to be recognized ("fooToDo" will not be recognized as a task
for tag "ToDo", but "foo#ToDo" will be detected for either tag "ToDo" or "#ToDo"). Respectively, a
tag ending with a letter or digit cannot be followed by a letter or digit to be recognized
("ToDofoo" will not be recognized as a task for tag "ToDo", but "ToDo:foo" will be detected either
for tag "ToDo" or "ToDo:").</td>
<td>{&lt;tag&gt;[,&lt;tag&gt;]*}.<br />
<b><i>Default value is "TODO,FIXME,<br />
XXX"</i></b></td>
</tr>
</table>
<a name="compatibility" id="compatibility"></a>
<p>The following table summarizes the compatible combinations of Java compliance, target and source
levels (bold values are the defaults for each compliance level).</p>

<table border="1">
<tr>
<th>Compliance</th>
<th>Target</th>
<th>Source</th>
</tr>
<tr>
<td valign="top" rowspan="5"><b>1.7</b></td>
<td valign="top"><b>1.7</b></td>
<td><b>1.7</b>, 1.6, 1.5, 1.4, 1.3</td>

</tr>
<tr>
<td valign="top">1.6</td>
<td>1.6, 1.5, 1.4, 1.3</td>
</tr>
<tr>
<td valign="top">1.5</td>
<td>1.5, 1.4, 1.3</td>
</tr>
<tr>
<td valign="top">1.4</td>
<td>1.4, 1.3</td>

</tr>
<tr>
<td valign="top">1.3, 1.2, 1.1</td>
<td>1.3</td>
</tr>
<tr>
<td valign="top" rowspan="4"><b>1.6</b></td>
<td valign="top"><b>1.6</b></td>
<td><b>1.6</b>, 1.5, 1.4, 1.3</td>
</tr>
<tr>

<td valign="top">1.5</td>
<td>1.5, 1.4, 1.3</td>
</tr>
<tr>
<td valign="top">1.4</td>
<td>1.4, 1.3</td>
</tr>
<tr>
<td valign="top">1.3, 1.2, 1.1</td>
<td>1.3</td>
</tr>

<tr>
<td valign="top" rowspan="3"><b>1.5</b></td>
<td valign="top"><b>1.5</b></td>
<td><b>1.5</b>, 1.4, 1.3</td>
</tr>
<tr>
<td valign="top">1.4</td>
<td>1.4, 1.3</td>
</tr>
<tr>
<td valign="top">1.3, 1.2, 1.1</td>

<td>1.3</td>
</tr>
<tr>
<td valign="top" rowspan="2"><b>1.4</b></td>
<td valign="top">1.4</td>
<td>1.4, 1.3</td>
</tr>
<tr>
<td valign="top">1.3, <b>1.2</b>, 1.1, cldc1.1</td>
<td><b>1.3</b></td>

</tr>
<tr>
<td valign="top"><b>1.3</b></td>
<td valign="top">1.3, 1.2, <b>1.1</b>, cldc1.1</td>
<td><b>1.3</b></td>
</tr>
</table>
<h4><a name="builder" id="builder">Builder Options</a></h4>
<table border="1" cellspacing="2" cellpadding="2" width="100%">
<tr>
<th>Description</th>

<th width="150">Values</th>
</tr>
<tr>
<td colspan="2"><b>Cleaning Output Folder(s)</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_JAVA_BUILD_CLEAN_OUTPUT_FOLDER">CORE_JAVA_BUILD_CLEAN_OUTPUT_FOLDER</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Indicate whether the JavaBuilder is allowed to clean the output folders when
performing full build operations.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CLEAN"><i>CLEAN</i></a></b></td>
</tr>

<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Duplicate Resources</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_JAVA_BUILD_DUPLICATE_RESOURCE">CORE_JAVA_BUILD_DUPLICATE_RESOURCE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Indicate the severity of the problem reported when more than one occurrence of a
given resource is to be copied to the output location.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>

</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Abort if Invalid Classpath</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_JAVA_BUILD_INVALID_CLASSPATH">CORE_JAVA_BUILD_INVALID_CLASSPATH</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Instruct the builder to abort if the classpath is invalid.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ABORT"><i>ABORT</i></a></b></td>

</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Computing Project Build Order</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_JAVA_BUILD_ORDER">CORE_JAVA_BUILD_ORDER</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Indicate whether JavaCore should enforce the project build order to be based on the
classpath prerequisite chain. When requesting to compute, this takes over the platform default
order (based on project references).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPUTE">COMPUTE</a></b></td>

</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Recreate Modified class files in Output Folder</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_JAVA_BUILD_RECREATE_MODIFIED_CLASS_FILES_IN_OUTPUT_FOLDER">CORE_JAVA_BUILD_RECREATE_MODIFIED_CLASS_FILES_IN_OUTPUT_FOLDER</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Indicate whether the JavaBuilder should check for any changes to .class files in
the output folders while performing incremental build operations. If changes are detected to
managed .class files, then a full build is performed, otherwise the changes are left as is. Tools
further altering generated .class files, like optimizers, should ensure this option remains set to
its default state of ignore.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ABORT">ENABLE</a></b></td>

</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Specifying Filters for Resource Copying Control</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_JAVA_BUILD_RESOURCE_COPY_FILTER">CORE_JAVA_BUILD_RESOURCE_COPY_FILTER</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="1">Specify filters to control the resource copy process. (&lt;name&gt; is a file name
pattern (only * wild-cards allowed) or the name of a folder which ends with '/'; any resource which
name matches one or more of these patterns is <em>not</em> copied to the output folder.)</td>

<td>{&lt;name&gt;[,&lt;name&gt;]*}.<br />
<b><i>Default value is ""</i></b></td>
</tr>
</table>
<h4><a name="javacore" id="javacore">JavaCore Options</a></h4>
<table border="1" cellspacing="2" cellpadding="2" width="100%">
<tr>
<th>Description</th>
<th width="120">Values</th>

</tr>
<tr>
<td colspan="2"><b>Reporting Classpath Cycle</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_CIRCULAR_CLASSPATH">CORE_CIRCULAR_CLASSPATH</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Indicate the severity of the problem reported when a project is involved in a
cycle.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR"><i>ERROR</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Enabling Usage of Classpath Exclusion Patterns</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_ENABLE_CLASSPATH_EXCLUSION_PATTERNS">CORE_ENABLE_CLASSPATH_EXCLUSION_PATTERNS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When set to "disabled", no entry on a project classpath can be associated with an
exclusion or inclusion pattern.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED"><i>ENABLED</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Enabling Usage of Classpath Multiple Output Locations</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_ENABLE_CLASSPATH_MULTIPLE_OUTPUT_LOCATIONS">CORE_ENABLE_CLASSPATH_MULTIPLE_OUTPUT_LOCATIONS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When set to "disabled", no entry on a project classpath can be associated with a
specific output location. In particular, this prevents the use of multiple output locations for a
single project.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED"><i>ENABLED</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Reporting an output location overlapping another source location</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_OUTPUT_LOCATION_OVERLAPPING_ANOTHER_SOURCE">CORE_OUTPUT_LOCATION_OVERLAPPING_ANOTHER_SOURCE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">Indicate the severity of the problem reported when a source entry's output location overlaps another
source entry.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR"><i>ERROR</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Default Source Encoding Format</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_ENCODING">CORE_ENCODING</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="1">Get the default encoding format of source files. This value is immutable and preset
to the result of <b><a href=
"../../org.eclipse.platform.doc.isv/reference/api/org/eclipse/core/resources/ResourcesPlugin.html#getEncoding()">
ResourcesPlugin.getEncoding()</a></b>.<br />
It is offered as a convenience shortcut only.</td>

<td><b><i>Immutable, preset to the platform default.</i></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Incompatible JDK Level for Required Binaries</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_INCOMPATIBLE_JDK_LEVEL">CORE_INCOMPATIBLE_JDK_LEVEL</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">Indicate the severity of the problem reported when a project prerequisites another
project or library with an incompatible target JDK level (e.g. project targeting 1.1 vm, but
compiled against 1.4 libraries).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR">ERROR</a></b></td>
</tr>

<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE"><i>IGNORE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Reporting Incomplete Classpath</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CORE_INCOMPLETE_CLASSPATH">CORE_INCOMPLETE_CLASSPATH</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="2">When enabled, the compiler will activate the preview language features of 
the latest Java version.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED"><i>ENABLED</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Enable support for preview language features</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_ENABLE_PREVIEW_FEATURES">COMPILER_PB_ENABLE_PREVIEW_FEATURES</a></b>)</td>
</tr>
<tr valign="top">

<td rowspan="3">When enabled, the compiler will issue a warning when a preview feature is used.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING"><i>WARNING</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INFO">INFO</a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#IGNORE">IGNORE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Set the severity of reporting when a preview feature is used.</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_PB_REPORT_PREVIEW_FEATURES">COMPILER_PB_REPORT_PREVIEW_FEATURES</a></b>)</td>
</tr>
<tr valign="top">

<td rowspan="2">Indicate the severity of the problem reported when an entry on the classpath
doesn't exist, is not legitimate, or is not visible (e.g. a referenced project is closed).</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ERROR"><i>ERROR</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#WARNING">WARNING</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Ignore Unnamed Module for Split Package</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#COMPILER_IGNORE_UNNAMED_MODULE_FOR_SPLIT_PACKAGE">COMPILER_IGNORE_UNNAMED_MODULE_FOR_SPLIT_PACKAGE</a></b>)</td>
</tr>
<tr valign="top">

<td rowspan="2">With this option the compiler will deliberately accept programs violating JLS in a specific way. Instead the compiler will behave in accordance to the original, but unmaintained document <a href="https://openjdk.org/projects/jigsaw/spec/sotms/#the-unnamed-module">"The State of the Module System"</a> which indicates that different semantics had been intended.
</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED"><i>ENABLED</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Set the timeout value for retrieving a method's parameter names from javadoc</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#TIMEOUT_FOR_PARAMETER_NAME_FROM_ATTACHED_JAVADOC">TIMEOUT_FOR_PARAMETER_NAME_FROM_ATTACHED_JAVADOC</a></b>)</td>
</tr>

<tr valign="top">
<td>Timeout in milliseconds to retrieve a method's parameter names from javadoc.<br />
If the value is 0, the parameter names are not fetched and the raw names are returned.</td>
<td>A positive or null integer.<br />
Default is <b><i>"50"</i></b>.</td>
</tr>
<tr>
<td colspan="2"><b>Set Java formatter name</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#JAVA_FORMATTER">JAVA_FORMATTER</a></b>)</td>
</tr>
<tr valign="top">
<td>Name of the Java formatter to be used for formatting Java code.<br /></td>
<td>A non-null, non-empty Sring value.<br />
Default is <b><i>"org.eclipse.jdt.core.defaultJavaFormatter"</i></b>.</td>
</tr>
</table>
<h4><a name="formatter" id="formatter">Formatter Options</a></h4>
<table border="1" cellspacing="2" cellpadding="2" width="100%">
<tr>

<th>Description</th>
<th width="80">Values</th>
</tr>
<tr>
<td colspan="2"><b>Option to align type members of a type declaration on column</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGN_TYPE_MEMBERS_ON_COLUMNS">FORMATTER_ALIGN_TYPE_MEMBERS_ON_COLUMNS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>

</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of arguments in allocation expression</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_ARGUMENTS_IN_ALLOCATION_EXPRESSION">FORMATTER_ALIGNMENT_FOR_ARGUMENTS_IN_ALLOCATION_EXPRESSION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>

</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of arguments in enum constant</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_ARGUMENTS_IN_ENUM_CONSTANT">FORMATTER_ALIGNMENT_FOR_ARGUMENTS_IN_ENUM_CONSTANT</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>

<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of arguments in annotation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_ARGUMENTS_IN_ANNOTATION">FORMATTER_ALIGNMENT_FOR_ARGUMENTS_IN_ANNOTATION</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_NO_SPLIT, INDENT_DEFAULT)</td>
</tr>
<tr>

<td colspan="2"><b>Option for alignment of arguments in explicit constructor call</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_ARGUMENTS_IN_EXPLICIT_CONSTRUCTOR_CALL">FORMATTER_ALIGNMENT_FOR_ARGUMENTS_IN_EXPLICIT_CONSTRUCTOR_CALL</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">

<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of arguments in method invocation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_ARGUMENTS_IN_METHOD_INVOCATION">FORMATTER_ALIGNMENT_FOR_ARGUMENTS_IN_METHOD_INVOCATION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>

</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of arguments in qualified allocation expression</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_ARGUMENTS_IN_QUALIFIED_ALLOCATION_EXPRESSION">FORMATTER_ALIGNMENT_FOR_ARGUMENTS_IN_QUALIFIED_ALLOCATION_EXPRESSION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>

<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of arguments in try with resources statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_RESOURCES_IN_TRY">FORMATTER_ALIGNMENT_FOR_RESOURCES_IN_TRY</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>

</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_NEXT_PER_LINE, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of union type in multi-catch expression</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_UNION_TYPE_IN_MULTICATCH">FORMATTER_ALIGNMENT_FOR_UNION_TYPE_IN_MULTICATCH</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>

</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of assignment</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_ASSIGNMENT">FORMATTER_ALIGNMENT_FOR_ASSIGNMENT</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, 0, INDENT_DEFAULT)</td>
</tr>
<tr>

<td colspan="2"><b>Option for alignment of binary expression</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_BINARY_EXPRESSION">FORMATTER_ALIGNMENT_FOR_BINARY_EXPRESSION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">

<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of compact if</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_COMPACT_IF">FORMATTER_ALIGNMENT_FOR_COMPACT_IF</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>

</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_ONE_PER_LINE, INDENT_BY_ONE)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of conditional expression</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_CONDITIONAL_EXPRESSION">FORMATTER_ALIGNMENT_FOR_CONDITIONAL_EXPRESSION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>

<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_ONE_PER_LINE, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of enum constants</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_ENUM_CONSTANTS">FORMATTER_ALIGNMENT_FOR_ENUM_CONSTANTS</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_NO_SPLIT, INDENT_DEFAULT)</td>
</tr>
<tr>

<td colspan="2"><b>Option for alignment of expressions in array initializer</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_EXPRESSIONS_IN_ARRAY_INITIALIZER">FORMATTER_ALIGNMENT_FOR_EXPRESSIONS_IN_ARRAY_INITIALIZER</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">

<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of method declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_METHOD_DECLARATION">FORMATTER_ALIGNMENT_FOR_METHOD_DECLARATION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>

</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of multiple fields</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_MULTIPLE_FIELDS">FORMATTER_ALIGNMENT_FOR_MULTIPLE_FIELDS</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>

<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of parameters in constructor declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_PARAMETERS_IN_CONSTRUCTOR_DECLARATION">FORMATTER_ALIGNMENT_FOR_PARAMETERS_IN_CONSTRUCTOR_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>

<td colspan="2"><b>Option for alignment of parameters in method declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_PARAMETERS_IN_METHOD_DECLARATION">FORMATTER_ALIGNMENT_FOR_PARAMETERS_IN_METHOD_DECLARATION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">

<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of selector in method invocation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_SELECTOR_IN_METHOD_INVOCATION">FORMATTER_ALIGNMENT_FOR_SELECTOR_IN_METHOD_INVOCATION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>

</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of superclass in type declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_SUPERCLASS_IN_TYPE_DECLARATION">FORMATTER_ALIGNMENT_FOR_SUPERCLASS_IN_TYPE_DECLARATION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>

<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_NEXT_SHIFTED, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of superinterfaces in enum declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_SUPERINTERFACES_IN_ENUM_DECLARATION">FORMATTER_ALIGNMENT_FOR_SUPERINTERFACES_IN_ENUM_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>

<td colspan="2"><b>Option for alignment of superinterfaces in type declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_SUPERINTERFACES_IN_TYPE_DECLARATION">FORMATTER_ALIGNMENT_FOR_SUPERINTERFACES_IN_TYPE_DECLARATION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">

<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of throws clause in constructor declaration</b>
(<b><a href="../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_THROWS_CLAUSE_IN_CONSTRUCTOR_DECLARATION">FORMATTER_ALIGNMENT_FOR_THROWS_CLAUSE_IN_CONSTRUCTOR_DECLARATION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>

</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option for alignment of throws clause in method declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ALIGNMENT_FOR_THROWS_CLAUSE_IN_METHOD_DECLARATION">FORMATTER_ALIGNMENT_FOR_THROWS_CLAUSE_IN_METHOD_DECLARATION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>

<td>values returned by <code>createAlignmentValue(boolean, int, int)</code> call</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>createAlignmentValue(false, WRAP_COMPACT, INDENT_DEFAULT)</td>
</tr>
<tr>
<td colspan="2"><b>Option to add blank lines after the imports declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BLANK_LINES_AFTER_IMPORTS">FORMATTER_BLANK_LINES_AFTER_IMPORTS</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"0"</td>
</tr>
<tr>
<td colspan="2"><b>Option to add blank lines after the package declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BLANK_LINES_AFTER_PACKAGE">FORMATTER_BLANK_LINES_AFTER_PACKAGE</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"0"</td>
</tr>
<tr>
<td colspan="2"><b>Option to add blank lines at the beginning of the method body</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BLANK_LINES_AT_BEGINNING_OF_METHOD_BODY">FORMATTER_BLANK_LINES_AT_BEGINNING_OF_METHOD_BODY</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"0"</td>
</tr>
<tr>
<td colspan="2"><b>Option to add blank lines before a field declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BLANK_LINES_BEFORE_FIELD">FORMATTER_BLANK_LINES_BEFORE_FIELD</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"0"</td>
</tr>
<tr>
<td colspan="2"><b>Option to add blank lines before the first class body declaration</b>

(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BLANK_LINES_BEFORE_FIRST_CLASS_BODY_DECLARATION">FORMATTER_BLANK_LINES_BEFORE_FIRST_CLASS_BODY_DECLARATION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"0"</td>

</tr>
<tr>
<td colspan="2"><b>Option to add blank lines before the imports declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BLANK_LINES_BEFORE_IMPORTS">FORMATTER_BLANK_LINES_BEFORE_IMPORTS</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>

<tr valign="top">
<td>Default value</td>
<td>"0"</td>
</tr>
<tr>
<td colspan="2"><b>Option to add blank lines before a member type declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BLANK_LINES_BEFORE_MEMBER_TYPE">FORMATTER_BLANK_LINES_BEFORE_MEMBER_TYPE</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>

<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"0"</td>
</tr>
<tr>
<td colspan="2"><b>Option to add blank lines before a method declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BLANK_LINES_BEFORE_METHOD">FORMATTER_BLANK_LINES_BEFORE_METHOD</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"0"</td>
</tr>
<tr>
<td colspan="2"><b>Option to add blank lines before a new chunk</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BLANK_LINES_BEFORE_NEW_CHUNK">FORMATTER_BLANK_LINES_BEFORE_NEW_CHUNK</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"0"</td>
</tr>
<tr>
<td colspan="2"><b>Option to add blank lines before the package declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BLANK_LINES_BEFORE_PACKAGE">FORMATTER_BLANK_LINES_BEFORE_PACKAGE</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"0"</td>
</tr>
<tr>
<td colspan="2"><b>Option to add blank lines between import groups</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BLANK_LINES_BETWEEN_IMPORT_GROUPS">FORMATTER_BLANK_LINES_BETWEEN_IMPORT_GROUPS</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"1"</td>
</tr>
<tr>
<td colspan="2"><b>Option to add blank lines between type declarations</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BLANK_LINES_BETWEEN_TYPE_DECLARATIONS">FORMATTER_BLANK_LINES_BETWEEN_TYPE_DECLARATIONS</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"0"</td>
</tr>
<tr>
<td colspan="2"><b>Option to position the braces of an annotation type declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BRACE_POSITION_FOR_ANNOTATION_TYPE_DECLARATION">FORMATTER_BRACE_POSITION_FOR_ANNOTATION_TYPE_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#END_OF_LINE"><i>
END_OF_LINE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE">NEXT_LINE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_SHIFTED">
NEXT_LINE_SHIFTED</a></b></td>
</tr>

<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_ON_WRAP">
NEXT_LINE_ON_WRAP</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to position the braces of an anonymous type declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BRACE_POSITION_FOR_ANONYMOUS_TYPE_DECLARATION">FORMATTER_BRACE_POSITION_FOR_ANONYMOUS_TYPE_DECLARATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#END_OF_LINE"><i>

END_OF_LINE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE">NEXT_LINE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_SHIFTED">
NEXT_LINE_SHIFTED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_ON_WRAP">
NEXT_LINE_ON_WRAP</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Option to position the braces of an array initializer</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BRACE_POSITION_FOR_ARRAY_INITIALIZER">FORMATTER_BRACE_POSITION_FOR_ARRAY_INITIALIZER</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#END_OF_LINE"><i>
END_OF_LINE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE">NEXT_LINE</a></b></td>

</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_SHIFTED">
NEXT_LINE_SHIFTED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_ON_WRAP">
NEXT_LINE_ON_WRAP</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to position the braces of a block</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BRACE_POSITION_FOR_BLOCK">FORMATTER_BRACE_POSITION_FOR_BLOCK</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#END_OF_LINE"><i>
END_OF_LINE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE">NEXT_LINE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_SHIFTED">
NEXT_LINE_SHIFTED</a></b></td>
</tr>

<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_ON_WRAP">
NEXT_LINE_ON_WRAP</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to position the braces of a block in a case statement when the block is
the first statement following</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BRACE_POSITION_FOR_BLOCK_IN_CASE">FORMATTER_BRACE_POSITION_FOR_BLOCK_IN_CASE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#END_OF_LINE"><i>

END_OF_LINE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE">NEXT_LINE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_SHIFTED">
NEXT_LINE_SHIFTED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_ON_WRAP">
NEXT_LINE_ON_WRAP</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Option to position the braces of a constructor declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BRACE_POSITION_FOR_CONSTRUCTOR_DECLARATION">FORMATTER_BRACE_POSITION_FOR_CONSTRUCTOR_DECLARATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#END_OF_LINE"><i>
END_OF_LINE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE">NEXT_LINE</a></b></td>

</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_SHIFTED">
NEXT_LINE_SHIFTED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_ON_WRAP">
NEXT_LINE_ON_WRAP</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to position the braces of an enum constant</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BRACE_POSITION_FOR_ENUM_CONSTANT">FORMATTER_BRACE_POSITION_FOR_ENUM_CONSTANT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#END_OF_LINE"><i>
END_OF_LINE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE">NEXT_LINE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_SHIFTED">
NEXT_LINE_SHIFTED</a></b></td>
</tr>

<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_ON_WRAP">
NEXT_LINE_ON_WRAP</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to position the braces of an enum declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BRACE_POSITION_FOR_ENUM_DECLARATION">FORMATTER_BRACE_POSITION_FOR_ENUM_DECLARATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#END_OF_LINE"><i>

END_OF_LINE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE">NEXT_LINE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_SHIFTED">
NEXT_LINE_SHIFTED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_ON_WRAP">
NEXT_LINE_ON_WRAP</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Option to position the braces of a method declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BRACE_POSITION_FOR_METHOD_DECLARATION">FORMATTER_BRACE_POSITION_FOR_METHOD_DECLARATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#END_OF_LINE"><i>
END_OF_LINE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE">NEXT_LINE</a></b></td>

</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_SHIFTED">
NEXT_LINE_SHIFTED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_ON_WRAP">
NEXT_LINE_ON_WRAP</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to position the braces of a switch statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BRACE_POSITION_FOR_SWITCH">FORMATTER_BRACE_POSITION_FOR_SWITCH</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="4">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#END_OF_LINE"><i>
END_OF_LINE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE">NEXT_LINE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_SHIFTED">
NEXT_LINE_SHIFTED</a></b></td>
</tr>

<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_ON_WRAP">
NEXT_LINE_ON_WRAP</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to position the braces of a type declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_BRACE_POSITION_FOR_TYPE_DECLARATION">FORMATTER_BRACE_POSITION_FOR_TYPE_DECLARATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="4">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#END_OF_LINE"><i>

END_OF_LINE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE">NEXT_LINE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_SHIFTED">
NEXT_LINE_SHIFTED</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#NEXT_LINE_ON_WRAP">
NEXT_LINE_ON_WRAP</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Option to control whether blank lines are cleared inside block comments</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_BLOCK_COMMENT">FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_BLOCK_COMMENT</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to control whether blank lines are cleared inside javadoc comments</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_JAVADOC_COMMENT">FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_JAVADOC_COMMENT</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to control whether multiple line comments are formatted</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_FORMAT_BLOCK_COMMENT">FORMATTER_COMMENT_FORMAT_BLOCK_COMMENT</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to control whether javadoc comments are formatted</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_FORMAT_JAVADOC_COMMENT">FORMATTER_COMMENT_FORMAT_JAVADOC_COMMENT</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to control whether single line comments are formatted</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_FORMAT_LINE_COMMENT">FORMATTER_COMMENT_FORMAT_LINE_COMMENT</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to format line comments that start on the first column</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_FORMAT_LINE_COMMENT_STARTING_ON_FIRST_COLUMN">FORMATTER_COMMENT_FORMAT_LINE_COMMENT_STARTING_ON_FIRST_COLUMN</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to control whether the header comment of a Java source file is
formatted</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_FORMAT_HEADER">FORMATTER_COMMENT_FORMAT_HEADER</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to control whether HTML tags are formatted.</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_FORMAT_HTML">FORMATTER_COMMENT_FORMAT_HTML</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to control whether code snippets are formatted in comments</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_FORMAT_SOURCE">FORMATTER_COMMENT_FORMAT_SOURCE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to control whether description of Javadoc parameters are indented</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_INDENT_PARAMETER_DESCRIPTION">FORMATTER_COMMENT_INDENT_PARAMETER_DESCRIPTION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to control whether Javadoc root tags are indented.</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_INDENT_ROOT_TAGS">FORMATTER_COMMENT_INDENT_ROOT_TAGS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to insert an empty line before the Javadoc root tag block</b>
(<b><a href="../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_INSERT_EMPTY_LINE_BEFORE_ROOT_TAGS">FORMATTER_COMMENT_INSERT_EMPTY_LINE_BEFORE_ROOT_TAGS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to insert a new line after Javadoc root tag parameters</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_INSERT_NEW_LINE_FOR_PARAMETER">FORMATTER_COMMENT_INSERT_NEW_LINE_FOR_PARAMETER</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>

</tr>
<tr>
<td colspan="2"><b>Option to specify the line length for comments.</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_LINE_LENGTH">FORMATTER_COMMENT_LINE_LENGTH</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>

<tr valign="top">
<td>Default value</td>
<td>"80"</td>
</tr>
<tr>
<td colspan="2"><b>Option to control whether block comments will have new lines at boundaries</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_NEW_LINES_AT_BLOCK_BOUNDARIES">FORMATTER_COMMENT_NEW_LINES_AT_BLOCK_BOUNDARIES</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>

<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to control whether javadoc comments will have new lines at boundaries</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_NEW_LINES_AT_JAVADOC_BOUNDARIES">FORMATTER_COMMENT_NEW_LINES_AT_JAVADOC_BOUNDARIES</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>

<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Option to preserve existing white space between code and line comments</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMMENT_PRESERVE_WHITE_SPACE_BETWEEN_CODE_AND_LINE_COMMENT">FORMATTER_COMMENT_PRESERVE_WHITE_SPACE_BETWEEN_CODE_AND_LINE_COMMENT</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>

<tr>
<td colspan="2"><b>Option to compact else/if</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_COMPACT_ELSE_IF">FORMATTER_COMPACT_ELSE_IF</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>

<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to set the continuation indentation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_CONTINUATION_INDENTATION">FORMATTER_CONTINUATION_INDENTATION</a></b>)</td>
</tr>
<tr valign="top">
<td>Possible value</td>

<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"2"</td>
</tr>
<tr>
<td colspan="2"><b>Option to set the continuation indentation inside array initializer</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_CONTINUATION_INDENTATION_FOR_ARRAY_INITIALIZER">FORMATTER_CONTINUATION_INDENTATION_FOR_ARRAY_INITIALIZER</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"2"</td>
</tr>
<tr>
<td colspan="2"><b>Option to use the disabling and enabling tags</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_USE_ON_OFF_TAGS">FORMATTER_USE_ON_OFF_TAGS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to define the tag to put in a comment to disable the formatting</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_DISABLING_TAG">FORMATTER_DISABLING_TAG</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible values</td>
<td>String</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"@format:off"</td>
</tr>
<tr>
<td colspan="2"><b>Option to define the tag to put in a comment to re-enable the formatting after
it has been disabled</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_ENABLING_TAG">FORMATTER_ENABLING_TAG</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible values</td>
<td>String</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"@format:on"</td>
</tr>
<tr>
<td colspan="2"><b>Option to indent body declarations compare to its enclosing annotation
declaration header</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INDENT_BODY_DECLARATIONS_COMPARE_TO_ANNOTATION_DECLARATION_HEADER">FORMATTER_INDENT_BODY_DECLARATIONS_COMPARE_TO_ANNOTATION_DECLARATION_HEADER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to indent body declarations compare to its enclosing enum constant
header</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INDENT_BODY_DECLARATIONS_COMPARE_TO_ENUM_CONSTANT_HEADER">FORMATTER_INDENT_BODY_DECLARATIONS_COMPARE_TO_ENUM_CONSTANT_HEADER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to indent body declarations compare to its enclosing enum declaration
header</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INDENT_BODY_DECLARATIONS_COMPARE_TO_ENUM_DECLARATION_HEADER">FORMATTER_INDENT_BODY_DECLARATIONS_COMPARE_TO_ENUM_DECLARATION_HEADER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to indent body declarations compare to its enclosing type header</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INDENT_BODY_DECLARATIONS_COMPARE_TO_TYPE_HEADER">FORMATTER_INDENT_BODY_DECLARATIONS_COMPARE_TO_TYPE_HEADER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to indent breaks compare to cases</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INDENT_BREAKS_COMPARE_TO_CASES">FORMATTER_INDENT_BREAKS_COMPARE_TO_CASES</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to indent empty lines</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INDENT_EMPTY_LINES">FORMATTER_INDENT_EMPTY_LINES</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to indent statements inside a block</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INDENT_STATEMENTS_COMPARE_TO_BLOCK">FORMATTER_INDENT_STATEMENTS_COMPARE_TO_BLOCK</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to indent statements inside the body of a method or a constructor</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INDENT_STATEMENTS_COMPARE_TO_BODY">FORMATTER_INDENT_STATEMENTS_COMPARE_TO_BODY</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to indent switch statements compare to cases</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INDENT_SWITCHSTATEMENTS_COMPARE_TO_CASES">FORMATTER_INDENT_SWITCHSTATEMENTS_COMPARE_TO_CASES</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to indent switch statements compare to switch</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INDENT_SWITCHSTATEMENTS_COMPARE_TO_SWITCH">FORMATTER_INDENT_SWITCHSTATEMENTS_COMPARE_TO_SWITCH</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to specify the equivalent number of spaces that represents one
indentation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INDENTATION_SIZE">FORMATTER_INDENTATION_SIZE</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"4"</td>
</tr>

<tr>
<td colspan="2"><b>Option to insert a new line after an annotation on a parameter</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_PARAMETER">FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_PARAMETER</a></b>)</td>

</tr>

<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line after an annotation on a field declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_FIELD">FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_FIELD</a></b>)</td>

</tr>

<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line after an annotation on a method declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_METHOD">FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_METHOD</a></b>)</td>

</tr>

<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line after an annotation on a package declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_PACKAGE">FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_PACKAGE</a></b>)</td>
</tr>

<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line after an annotation on a type declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_TYPE">FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_TYPE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line after an annotation on a local variable</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_LOCAL_VARIABLE">FORMATTER_INSERT_NEW_LINE_AFTER_ANNOTATION_ON_LOCAL_VARIABLE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line after a label</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_AFTER_LABEL">FORMATTER_INSERT_NEW_LINE_AFTER_LABEL</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line after the opening brace in an array initializer</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_AFTER_OPENING_BRACE_IN_ARRAY_INITIALIZER">FORMATTER_INSERT_NEW_LINE_AFTER_OPENING_BRACE_IN_ARRAY_INITIALIZER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line at the end of the current file if missing</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_AT_END_OF_FILE_IF_MISSING">FORMATTER_INSERT_NEW_LINE_AT_END_OF_FILE_IF_MISSING</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line before the catch keyword in try statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_BEFORE_CATCH_IN_TRY_STATEMENT">FORMATTER_INSERT_NEW_LINE_BEFORE_CATCH_IN_TRY_STATEMENT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line before the closing brace in an array initializer</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_BEFORE_CLOSING_BRACE_IN_ARRAY_INITIALIZER">FORMATTER_INSERT_NEW_LINE_BEFORE_CLOSING_BRACE_IN_ARRAY_INITIALIZER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line before the else keyword in if statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_BEFORE_ELSE_IN_IF_STATEMENT">FORMATTER_INSERT_NEW_LINE_BEFORE_ELSE_IN_IF_STATEMENT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line before the finally keyword in try statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_BEFORE_FINALLY_IN_TRY_STATEMENT">FORMATTER_INSERT_NEW_LINE_BEFORE_FINALLY_IN_TRY_STATEMENT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line before while in do statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_BEFORE_WHILE_IN_DO_STATEMENT">FORMATTER_INSERT_NEW_LINE_BEFORE_WHILE_IN_DO_STATEMENT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line in an empty annotation declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_IN_EMPTY_ANNOTATION_DECLARATION">FORMATTER_INSERT_NEW_LINE_IN_EMPTY_ANNOTATION_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line in an empty anonymous type declaration</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_IN_EMPTY_ANONYMOUS_TYPE_DECLARATION">FORMATTER_INSERT_NEW_LINE_IN_EMPTY_ANONYMOUS_TYPE_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line in an empty block</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_IN_EMPTY_BLOCK">FORMATTER_INSERT_NEW_LINE_IN_EMPTY_BLOCK</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line in an empty enum constant</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_IN_EMPTY_ENUM_CONSTANT">FORMATTER_INSERT_NEW_LINE_IN_EMPTY_ENUM_CONSTANT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line in an empty enum declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_IN_EMPTY_ENUM_DECLARATION">FORMATTER_INSERT_NEW_LINE_IN_EMPTY_ENUM_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line in an empty method body</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_IN_EMPTY_METHOD_BODY">FORMATTER_INSERT_NEW_LINE_IN_EMPTY_METHOD_BODY</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a new line in an empty type declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_NEW_LINE_IN_EMPTY_TYPE_DECLARATION">FORMATTER_INSERT_NEW_LINE_IN_EMPTY_TYPE_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after and in wilcard</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_AND_IN_TYPE_PARAMETER">FORMATTER_INSERT_SPACE_AFTER_AND_IN_TYPE_PARAMETER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after an assignment operator</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_ASSIGNMENT_OPERATOR">FORMATTER_INSERT_SPACE_AFTER_ASSIGNMENT_OPERATOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after at in annotation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_AT_IN_ANNOTATION">FORMATTER_INSERT_SPACE_AFTER_AT_IN_ANNOTATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after at in annotation type declaration</b>
(<b><a href="../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_AT_IN_ANNOTATION_TYPE_DECLARATION">FORMATTER_INSERT_SPACE_AFTER_AT_IN_ANNOTATION_TYPE_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after a binary operator</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_BINARY_OPERATOR">FORMATTER_INSERT_SPACE_AFTER_BINARY_OPERATOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the closing angle bracket in type arguments</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_CLOSING_ANGLE_BRACKET_IN_TYPE_ARGUMENTS">FORMATTER_INSERT_SPACE_AFTER_CLOSING_ANGLE_BRACKET_IN_TYPE_ARGUMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the closing angle bracket in type parameters</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_CLOSING_ANGLE_BRACKET_IN_TYPE_PARAMETERS">FORMATTER_INSERT_SPACE_AFTER_CLOSING_ANGLE_BRACKET_IN_TYPE_PARAMETERS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the closing brace of a block</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_CLOSING_BRACE_IN_BLOCK">FORMATTER_INSERT_SPACE_AFTER_CLOSING_BRACE_IN_BLOCK</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the closing parenthesis of a cast expression</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_CLOSING_PAREN_IN_CAST">FORMATTER_INSERT_SPACE_AFTER_CLOSING_PAREN_IN_CAST</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the colon in an assert statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COLON_IN_ASSERT">FORMATTER_INSERT_SPACE_AFTER_COLON_IN_ASSERT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after colon in a case statement when a opening brace
follows the colon</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COLON_IN_CASE">FORMATTER_INSERT_SPACE_AFTER_COLON_IN_CASE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the colon in a conditional expression</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COLON_IN_CONDITIONAL">FORMATTER_INSERT_SPACE_AFTER_COLON_IN_CONDITIONAL</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after colon in a for statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COLON_IN_FOR">FORMATTER_INSERT_SPACE_AFTER_COLON_IN_FOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the colon in a labeled statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COLON_IN_LABELED_STATEMENT">FORMATTER_INSERT_SPACE_AFTER_COLON_IN_LABELED_STATEMENT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in an allocation expression</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_ALLOCATION_EXPRESSION">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_ALLOCATION_EXPRESSION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in annotation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_ANNOTATION">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_ANNOTATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in an array initializer</b>
(<b><a href="../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_ARRAY_INITIALIZER">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_ARRAY_INITIALIZER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in the parameters of a constructor
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_DECLARATION_PARAMETERS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_DECLARATION_PARAMETERS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in the exception names in a throws
clause of a constructor declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_DECLARATION_THROWS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_DECLARATION_THROWS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in the arguments of an enum
constant</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_ENUM_CONSTANT_ARGUMENTS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_ENUM_CONSTANT_ARGUMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in enum declarations</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_ENUM_DECLARATIONS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_ENUM_DECLARATIONS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in the arguments of an explicit
constructor call</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_EXPLICIT_CONSTRUCTOR_CALL_ARGUMENTS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_EXPLICIT_CONSTRUCTOR_CALL_ARGUMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in the increments of a for
statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_FOR_INCREMENTS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_FOR_INCREMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in the initializations of a for
statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_FOR_INITS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_FOR_INITS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in the parameters of a method
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_METHOD_DECLARATION_PARAMETERS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_METHOD_DECLARATION_PARAMETERS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in the exception names in a throws
clause of a method declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_METHOD_DECLARATION_THROWS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_METHOD_DECLARATION_THROWS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in the arguments of a method
invocation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_METHOD_INVOCATION_ARGUMENTS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_METHOD_INVOCATION_ARGUMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in multiple field declaration</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in multiple local declaration</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in parameterized type reference</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_PARAMETERIZED_TYPE_REFERENCE">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_PARAMETERIZED_TYPE_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in superinterfaces names of a type
header</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_SUPERINTERFACES">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_SUPERINTERFACES</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in type arguments</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_TYPE_ARGUMENTS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_TYPE_ARGUMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the comma in type parameters</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_TYPE_PARAMETERS">FORMATTER_INSERT_SPACE_AFTER_COMMA_IN_TYPE_PARAMETERS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after ellipsis</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_ELLIPSIS">FORMATTER_INSERT_SPACE_AFTER_ELLIPSIS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening angle bracket in parameterized type
reference</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_ANGLE_BRACKET_IN_PARAMETERIZED_TYPE_REFERENCE">FORMATTER_INSERT_SPACE_AFTER_OPENING_ANGLE_BRACKET_IN_PARAMETERIZED_TYPE_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening angle bracket in type arguments</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_ANGLE_BRACKET_IN_TYPE_ARGUMENTS">FORMATTER_INSERT_SPACE_AFTER_OPENING_ANGLE_BRACKET_IN_TYPE_ARGUMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening angle bracket in type parameters</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_ANGLE_BRACKET_IN_TYPE_PARAMETERS">FORMATTER_INSERT_SPACE_AFTER_OPENING_ANGLE_BRACKET_IN_TYPE_PARAMETERS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening brace in an array initializer</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_BRACE_IN_ARRAY_INITIALIZER">FORMATTER_INSERT_SPACE_AFTER_OPENING_BRACE_IN_ARRAY_INITIALIZER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening bracket inside an array allocation
expression</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_BRACKET_IN_ARRAY_ALLOCATION_EXPRESSION">FORMATTER_INSERT_SPACE_AFTER_OPENING_BRACKET_IN_ARRAY_ALLOCATION_EXPRESSION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening bracket inside an array reference</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_BRACKET_IN_ARRAY_REFERENCE">FORMATTER_INSERT_SPACE_AFTER_OPENING_BRACKET_IN_ARRAY_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in annotation</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_ANNOTATION">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_ANNOTATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in a cast expression</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_CAST">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_CAST</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in a catch</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_CATCH">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_CATCH</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in a constructor
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_CONSTRUCTOR_DECLARATION">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_CONSTRUCTOR_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in enum constant</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_ENUM_CONSTANT">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_ENUM_CONSTANT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in a for statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_FOR">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_FOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in an if statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_IF">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_IF</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in a method
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_METHOD_DECLARATION">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_METHOD_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in a method
invocation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_METHOD_INVOCATION">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_METHOD_INVOCATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in a parenthesized
expression</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_PARENTHESIZED_EXPRESSION">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_PARENTHESIZED_EXPRESSION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in a switch statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_SWITCH">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_SWITCH</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in a synchronized
statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_SYNCHRONIZED">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_SYNCHRONIZED</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in a try with resources
statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_TRY">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_TRY</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after the opening parenthesis in a while statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_WHILE">FORMATTER_INSERT_SPACE_AFTER_OPENING_PAREN_IN_WHILE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after a postfix operator</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_POSTFIX_OPERATOR">FORMATTER_INSERT_SPACE_AFTER_POSTFIX_OPERATOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after a prefix operator</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_PREFIX_OPERATOR">FORMATTER_INSERT_SPACE_AFTER_PREFIX_OPERATOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after question mark in a conditional expression</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_QUESTION_IN_CONDITIONAL">FORMATTER_INSERT_SPACE_AFTER_QUESTION_IN_CONDITIONAL</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after question mark in a wildcard</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_QUESTION_IN_WILDCARD">FORMATTER_INSERT_SPACE_AFTER_QUESTION_IN_WILDCARD</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after semicolon in a for statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_SEMICOLON_IN_FOR">FORMATTER_INSERT_SPACE_AFTER_SEMICOLON_IN_FOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after each semicolon in a try with resources
statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_SEMICOLON_IN_TRY_RESOURCES">FORMATTER_INSERT_SPACE_AFTER_SEMICOLON_IN_TRY_RESOURCES</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space after an unary operator</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_AFTER_UNARY_OPERATOR">FORMATTER_INSERT_SPACE_AFTER_UNARY_OPERATOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before and in wildcard</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_AND_IN_TYPE_PARAMETER">FORMATTER_INSERT_SPACE_BEFORE_AND_IN_TYPE_PARAMETER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before an assignment operator</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_ASSIGNMENT_OPERATOR">FORMATTER_INSERT_SPACE_BEFORE_ASSIGNMENT_OPERATOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before at in annotation type declaration</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_AT_IN_ANNOTATION_TYPE_DECLARATION">FORMATTER_INSERT_SPACE_BEFORE_AT_IN_ANNOTATION_TYPE_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before an binary operator</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_BINARY_OPERATOR">FORMATTER_INSERT_SPACE_BEFORE_BINARY_OPERATOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing angle bracket in parameterized type
reference</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_ANGLE_BRACKET_IN_PARAMETERIZED_TYPE_REFERENCE">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_ANGLE_BRACKET_IN_PARAMETERIZED_TYPE_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing angle bracket in type arguments</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_ANGLE_BRACKET_IN_TYPE_ARGUMENTS">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_ANGLE_BRACKET_IN_TYPE_ARGUMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing angle bracket in type parameters</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_ANGLE_BRACKET_IN_TYPE_PARAMETERS">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_ANGLE_BRACKET_IN_TYPE_PARAMETERS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing brace in an array initializer</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_BRACE_IN_ARRAY_INITIALIZER">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_BRACE_IN_ARRAY_INITIALIZER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing bracket in an array allocation
expression</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_BRACKET_IN_ARRAY_ALLOCATION_EXPRESSION">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_BRACKET_IN_ARRAY_ALLOCATION_EXPRESSION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing bracket in an array reference</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_BRACKET_IN_ARRAY_REFERENCE">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_BRACKET_IN_ARRAY_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in annotation</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_ANNOTATION">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_ANNOTATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in a cast expression</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CAST">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CAST</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in a catch</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CATCH">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CATCH</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in a constructor
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CONSTRUCTOR_DECLARATION">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CONSTRUCTOR_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in enum constant</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_ENUM_CONSTANT">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_ENUM_CONSTANT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in a for statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_FOR">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_FOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in an if statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_IF">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_IF</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in a method
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_METHOD_DECLARATION">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_METHOD_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in a method
invocation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_METHOD_INVOCATION">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_METHOD_INVOCATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in a parenthesized
expression</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_PARENTHESIZED_EXPRESSION">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_PARENTHESIZED_EXPRESSION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in a switch
statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_SWITCH">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_SWITCH</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in a synchronized
statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_SYNCHRONIZED">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_SYNCHRONIZED</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before closing paranthesis in a try with resources
statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_TRY">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_TRY</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the closing parenthesis in a while statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_WHILE">FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_WHILE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before colon in an assert statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_ASSERT">FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_ASSERT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before colon in a case statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_CASE">FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_CASE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before colon in a conditional expression</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_CONDITIONAL">FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_CONDITIONAL</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before colon in a default statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_DEFAULT">FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_DEFAULT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before colon in a for statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_FOR">FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_FOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before colon in a labeled statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_LABELED_STATEMENT">FORMATTER_INSERT_SPACE_BEFORE_COLON_IN_LABELED_STATEMENT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in an allocation expression</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_ALLOCATION_EXPRESSION">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_ALLOCATION_EXPRESSION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in annotation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_ANNOTATION">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_ANNOTATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in an array initializer</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_ARRAY_INITIALIZER">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_ARRAY_INITIALIZER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in the parameters of a constructor
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_DECLARATION_PARAMETERS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_DECLARATION_PARAMETERS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in the exception names of the throws
clause of a constructor declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_DECLARATION_THROWS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_DECLARATION_THROWS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in the arguments of enum constant</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_ENUM_CONSTANT_ARGUMENTS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_ENUM_CONSTANT_ARGUMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in enum declarations</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_ENUM_DECLARATIONS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_ENUM_DECLARATIONS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in the arguments of an explicit
constructor call</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_EXPLICIT_CONSTRUCTOR_CALL_ARGUMENTS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_EXPLICIT_CONSTRUCTOR_CALL_ARGUMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in the increments of a for statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_FOR_INCREMENTS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_FOR_INCREMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in the initializations of a for
statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_FOR_INITS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_FOR_INITS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in the parameters of a method
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_DECLARATION_PARAMETERS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_DECLARATION_PARAMETERS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in the exception names of the throws
clause of a method declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_DECLARATION_THROWS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_DECLARATION_THROWS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in the arguments of a method
invocation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_INVOCATION_ARGUMENTS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_INVOCATION_ARGUMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in a multiple field declaration</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in a multiple local declaration</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in parameterized type reference</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_PARAMETERIZED_TYPE_REFERENCE">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_PARAMETERIZED_TYPE_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in the superinterfaces names in a type
header</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_SUPERINTERFACES">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_SUPERINTERFACES</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in type arguments</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_TYPE_ARGUMENTS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_TYPE_ARGUMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before comma in type parameters</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_TYPE_PARAMETERS">FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_TYPE_PARAMETERS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before ellipsis</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_ELLIPSIS">FORMATTER_INSERT_SPACE_BEFORE_ELLIPSIS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening angle bracket in parameterized type
reference</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_ANGLE_BRACKET_IN_PARAMETERIZED_TYPE_REFERENCE">FORMATTER_INSERT_SPACE_BEFORE_OPENING_ANGLE_BRACKET_IN_PARAMETERIZED_TYPE_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening angle bracket in type arguments</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_ANGLE_BRACKET_IN_TYPE_ARGUMENTS">FORMATTER_INSERT_SPACE_BEFORE_OPENING_ANGLE_BRACKET_IN_TYPE_ARGUMENTS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening angle bracket in type parameters</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_ANGLE_BRACKET_IN_TYPE_PARAMETERS">FORMATTER_INSERT_SPACE_BEFORE_OPENING_ANGLE_BRACKET_IN_TYPE_PARAMETERS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening brace in an annotation type
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_ANNOTATION_TYPE_DECLARATION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_ANNOTATION_TYPE_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening brace in an anonymous type
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_ANONYMOUS_TYPE_DECLARATION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_ANONYMOUS_TYPE_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening brace in an array initializer</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_ARRAY_INITIALIZER">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_ARRAY_INITIALIZER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening brace in a block</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_BLOCK">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_BLOCK</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening brace in a constructor
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_CONSTRUCTOR_DECLARATION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_CONSTRUCTOR_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening brace in an enum constant</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_ENUM_CONSTANT">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_ENUM_CONSTANT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening brace in an enum declaration</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_ENUM_DECLARATION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_ENUM_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening brace in a method declaration</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_METHOD_DECLARATION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_METHOD_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening brace in a switch statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_SWITCH">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_SWITCH</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening brace in a type declaration</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_TYPE_DECLARATION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACE_IN_TYPE_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening bracket in an array allocation
expression</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACKET_IN_ARRAY_ALLOCATION_EXPRESSION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACKET_IN_ARRAY_ALLOCATION_EXPRESSION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening bracket in an array reference</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACKET_IN_ARRAY_REFERENCE">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACKET_IN_ARRAY_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening bracket in an array type
reference</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACKET_IN_ARRAY_TYPE_REFERENCE">FORMATTER_INSERT_SPACE_BEFORE_OPENING_BRACKET_IN_ARRAY_TYPE_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in annotation</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_ANNOTATION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_ANNOTATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in annotation type
member declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_ANNOTATION_TYPE_MEMBER_DECLARATION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_ANNOTATION_TYPE_MEMBER_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in a catch</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_CATCH">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_CATCH</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in a constructor
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_CONSTRUCTOR_DECLARATION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_CONSTRUCTOR_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in enum constant</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_ENUM_CONSTANT">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_ENUM_CONSTANT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in a for statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_FOR">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_FOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in an if statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_IF">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_IF</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in a method
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_METHOD_DECLARATION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_METHOD_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in a method
invocation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_METHOD_INVOCATION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_METHOD_INVOCATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in a parenthesized
expression</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_PARENTHESIZED_EXPRESSION">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_PARENTHESIZED_EXPRESSION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in a switch
statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_SWITCH">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_SWITCH</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in a synchronized
statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_SYNCHRONIZED">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_SYNCHRONIZED</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in a try with resources
statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_TRY">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_TRY</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before the opening parenthesis in a while statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_WHILE">FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_WHILE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before parenthesized expression in return statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_PARENTHESIZED_EXPRESSION_IN_RETURN">FORMATTER_INSERT_SPACE_BEFORE_PARENTHESIZED_EXPRESSION_IN_RETURN</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before parenthesized expression in throw statement</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_PARENTHESIZED_EXPRESSION_IN_THROW">FORMATTER_INSERT_SPACE_BEFORE_PARENTHESIZED_EXPRESSION_IN_THROW</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before a postfix operator</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_POSTFIX_OPERATOR">FORMATTER_INSERT_SPACE_BEFORE_POSTFIX_OPERATOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before a prefix operator</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_PREFIX_OPERATOR">FORMATTER_INSERT_SPACE_BEFORE_PREFIX_OPERATOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before question mark in a conditional expression</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_QUESTION_IN_CONDITIONAL">FORMATTER_INSERT_SPACE_BEFORE_QUESTION_IN_CONDITIONAL</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT"><i>INSERT</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT">DO_NOT_INSERT</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before question mark in a wildcard</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_QUESTION_IN_WILDCARD">FORMATTER_INSERT_SPACE_BEFORE_QUESTION_IN_WILDCARD</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before semicolon</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_SEMICOLON">FORMATTER_INSERT_SPACE_BEFORE_SEMICOLON</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before semicolon in for statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_SEMICOLON_IN_FOR">FORMATTER_INSERT_SPACE_BEFORE_SEMICOLON_IN_FOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before each semicolon in try with resources statement</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_SEMICOLON_IN_TRY_RESOURCES">FORMATTER_INSERT_SPACE_BEFORE_SEMICOLON_IN_TRY_RESOURCES</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space before unary operator</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BEFORE_UNARY_OPERATOR">FORMATTER_INSERT_SPACE_BEFORE_UNARY_OPERATOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space between brackets in an array type reference</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BETWEEN_BRACKETS_IN_ARRAY_TYPE_REFERENCE">FORMATTER_INSERT_SPACE_BETWEEN_BRACKETS_IN_ARRAY_TYPE_REFERENCE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space between empty braces in an array initializer</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_BRACES_IN_ARRAY_INITIALIZER">FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_BRACES_IN_ARRAY_INITIALIZER</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space between empty brackets in an array allocation
expression</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_BRACKETS_IN_ARRAY_ALLOCATION_EXPRESSION">FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_BRACKETS_IN_ARRAY_ALLOCATION_EXPRESSION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space between empty parenthesis in an annotation type member
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_PARENS_IN_ANNOTATION_TYPE_MEMBER_DECLARATION">FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_PARENS_IN_ANNOTATION_TYPE_MEMBER_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space between empty parenthesis in a constructor
declaration</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_PARENS_IN_CONSTRUCTOR_DECLARATION">FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_PARENS_IN_CONSTRUCTOR_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space between empty parenthesis in enum constant</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_PARENS_IN_ENUM_CONSTANT">FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_PARENS_IN_ENUM_CONSTANT</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space between empty parenthesis in a method declaration</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_PARENS_IN_METHOD_DECLARATION">FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_PARENS_IN_METHOD_DECLARATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to insert a space between empty parenthesis in a method invocation</b>
(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_PARENS_IN_METHOD_INVOCATION">FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_PARENS_IN_METHOD_INVOCATION</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#INSERT">INSERT</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DO_NOT_INSERT"><i>DO_NOT_INSERT</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to keep else statement on the same line</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_KEEP_ELSE_STATEMENT_ON_SAME_LINE">FORMATTER_KEEP_ELSE_STATEMENT_ON_SAME_LINE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to keep empty array initializer one line</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_KEEP_EMPTY_ARRAY_INITIALIZER_ON_ONE_LINE">FORMATTER_KEEP_EMPTY_ARRAY_INITIALIZER_ON_ONE_LINE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to keep guardian clause on one line</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_KEEP_GUARDIAN_CLAUSE_ON_ONE_LINE">FORMATTER_KEEP_GUARDIAN_CLAUSE_ON_ONE_LINE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to keep simple if statement on the one line</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_KEEP_SIMPLE_IF_ON_ONE_LINE">FORMATTER_KEEP_SIMPLE_IF_ON_ONE_LINE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to keep then statement on the same line</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_KEEP_THEN_STATEMENT_ON_SAME_LINE">FORMATTER_KEEP_THEN_STATEMENT_ON_SAME_LINE</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to specify the length of the page. Beyond this length, the formatter will
try to split the code</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_LINE_SPLIT">FORMATTER_LINE_SPLIT</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"80"</td>
</tr>
<tr>
<td colspan="2"><b>Option to indent block comments that start on the first column</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_NEVER_INDENT_BLOCK_COMMENTS_ON_FIRST_COLUMN">FORMATTER_NEVER_INDENT_BLOCK_COMMENTS_ON_FIRST_COLUMN</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to indent line comments that start on the first column</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_NEVER_INDENT_LINE_COMMENTS_ON_FIRST_COLUMN">FORMATTER_NEVER_INDENT_LINE_COMMENTS_ON_FIRST_COLUMN</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to specify the number of empty lines to preserve</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_NUMBER_OF_EMPTY_LINES_TO_PRESERVE">FORMATTER_NUMBER_OF_EMPTY_LINES_TO_PRESERVE</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"0"</td>
</tr>
<tr>
<td colspan="2"><b>Option to specify whether or not empty statement should be on a new line</b>

(<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_PUT_EMPTY_STATEMENT_ON_NEW_LINE">FORMATTER_PUT_EMPTY_STATEMENT_ON_NEW_LINE</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to specify the tabulation size</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_TAB_CHAR">FORMATTER_TAB_CHAR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="3">Possible values</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#TAB"><i>TAB</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#SPACE">SPACE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#MIXED">MIXED</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to specify the equivalent number of spaces that represents one
tabulation</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_TAB_SIZE">FORMATTER_TAB_SIZE</a></b>)</td>

</tr>
<tr valign="top">
<td>Possible value</td>
<td>"&lt;n&gt;", where n is zero or a positive integer</td>
</tr>
<tr valign="top">
<td>Default value</td>
<td>"4"</td>
</tr>
<tr>
<td colspan="2"><b>Option to use tabulations only for leading indentations</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_USE_TABS_ONLY_FOR_LEADING_INDENTATIONS">FORMATTER_USE_TABS_ONLY_FOR_LEADING_INDENTATIONS</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE">TRUE</a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE"><i>FALSE</i></a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to wrap before the binary operator</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_WRAP_BEFORE_BINARY_OPERATOR">FORMATTER_WRAP_BEFORE_BINARY_OPERATOR</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to wrap before OR operator in a multi-catch expression</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_WRAP_BEFORE_OR_OPERATOR_MULTICATCH">FORMATTER_WRAP_BEFORE_OR_OPERATOR_MULTICATCH</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Option to wrap outer expressions in nested expressions</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FORMATTER_WRAP_OUTER_EXPRESSIONS_WHEN_NESTED">FORMATTER_WRAP_OUTER_EXPRESSIONS_WHEN_NESTED</a></b>)</td>

</tr>
<tr valign="top">
<td rowspan="2">Possible values</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#TRUE"><i>TRUE</i></a></b></td>
</tr>
<tr valign="top">
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/formatter/DefaultCodeFormatterConstants.html#FALSE">FALSE</a></b></td>
</tr>
</table>
<h4><a name="codeassist" id="codeassist">CodeAssist Options</a></h4>
<table border="1" cellspacing="2" cellpadding="2" width="100%">
<tr>
<th>Description</th>

<th width="80">Values</th>
</tr>
<tr>
<td colspan="2"><b>Define the Prefixes for Argument Name</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_ARGUMENT_PREFIXES">CODEASSIST_ARGUMENT_PREFIXES</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="1">When the prefixes is non empty, completion for argument name will begin with one of
the proposed prefixes.</td>
<td>{&lt;prefix&gt;[,&lt;prefix&gt;]*}.<br />

<b><i>Default value is ""</i></b></td>
</tr>
<tr>
<td colspan="2"><b>Define the Suffixes for Argument Name</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_ARGUMENT_SUFFIXES">CODEASSIST_ARGUMENT_SUFFIXES</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="1">When the suffixes is non empty, completion for argument name will end with one of
the proposed suffixes.</td>
<td>{&lt;suffix&gt;[,&lt;suffix&gt;]*}.<br />

<b><i>Default value is ""</i></b></td>
</tr>
<tr>
<td colspan="2"><b>Activate Camel Case Sensitive Completion</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_CAMEL_CASE_MATCH">CODEASSIST_CAMEL_CASE_MATCH</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, completion shows proposals whose name match the CamelCase
pattern.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED"><i>ENABLED</i></a></b></td>
</tr>

<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Activate Substring Code Completion</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_SUBSTRING_MATCH">CODEASSIST_SUBSTRING_MATCH</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, completion shows proposals in which the pattern can
be found as a substring in a case-insensitive way.</td>
<td><b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED"><i>ENABLED</i></a></b></td>
</tr>

<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>

<tr>
<td colspan="2"><b>Activate Deprecation Sensitive Completion</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_DEPRECATION_CHECK">CODEASSIST_DEPRECATION_CHECK</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, completion doesn't propose deprecated members and types.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>

</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Activate Discouraged Reference Sensitive Completion</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_DISCOURAGED_REFERENCE_CHECK">CODEASSIST_DISCOURAGED_REFERENCE_CHECK</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, completion doesn't propose elements which match a discouraged
reference rule.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>

</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Define the Prefixes for Field Name</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_FIELD_PREFIXES">CODEASSIST_FIELD_PREFIXES</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="1">When the prefixes is non empty, completion for field name will begin with one of
the proposed prefixes.</td>
<td>{&lt;prefix&gt;[,&lt;prefix&gt;]*}.<br />

<b><i>Default value is ""</i></b></td>
</tr>
<tr>
<td colspan="2"><b>Define the Suffixes for Field Name</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_FIELD_SUFFIXES">CODEASSIST_FIELD_SUFFIXES</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="1">When the suffixes is non empty, completion for field name will end with one of the
proposed suffixes.</td>
<td>{&lt;suffix&gt;[,&lt;suffix&gt;]*}.<br />

<b><i>Default value is ""</i></b></td>
</tr>
<tr>
<td colspan="2"><b>Activate Forbidden Reference Sensitive Completion</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_FORBIDDEN_REFERENCE_CHECK">CODEASSIST_FORBIDDEN_REFERENCE_CHECK</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, completion doesn't propose elements which match a forbidden reference
rule.</td>
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></i></b></td>
</tr>

<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Automatic Qualification of Implicit Members</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_IMPLICIT_QUALIFICATION">CODEASSIST_IMPLICIT_QUALIFICATION</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, completion automatically qualifies completion on implicit field
references and message expressions.</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>

</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></i></b></td>
</tr>
<tr>
<td colspan="2"><b>Define the Prefixes for Local Variable Name</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_LOCAL_PREFIXES">CODEASSIST_LOCAL_PREFIXES</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="1">When the prefixes is non empty, completion for local variable name will begin with
one of the proposed prefixes.</td>
<td>{&lt;prefix&gt;[,&lt;prefix&gt;]*}.<br />

<b><i>Default value is ""</i></b></td>
</tr>
<tr>
<td colspan="2"><b>Define the Suffixes for Local Variable Name</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_LOCAL_SUFFIXES">CODEASSIST_LOCAL_SUFFIXES</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="1">When the suffixes is non empty, completion for local variable name will end with
one of the proposed suffixes.</td>
<td>{&lt;suffix&gt;[,&lt;suffix&gt;]*}.<br />

<b><i>Default value is ""</i></b></td>
</tr>
<tr>
<td colspan="2"><b>Define the Prefixes for Static Field Name</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_STATIC_FIELD_PREFIXES">CODEASSIST_STATIC_FIELD_PREFIXES</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="1">When the prefixes is non empty, completion for static field name will begin with
one of the proposed prefixes.</td>
<td>{&lt;prefix&gt;[,&lt;prefix&gt;]*}.<br />

<b><i>Default value is ""</i></b></td>
</tr>
<tr>
<td colspan="2"><b>Define the Suffixes for Static Field Name</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_STATIC_FIELD_SUFFIXES">CODEASSIST_STATIC_FIELD_SUFFIXES</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="1">When the suffixes is non empty, completion for static field name will end with one
of the proposed suffixes.</td>
<td>{&lt;suffix&gt;[,&lt;suffix&gt;]*}.<br />

<b><i>Default value is ""</i></b></td>
</tr>
<tr>
<td colspan="2"><b>Activate Suggestion of Static Import</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_SUGGEST_STATIC_IMPORTS">CODEASSIST_SUGGEST_STATIC_IMPORTS</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, completion proposals can contain static import pattern.</td>
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></i></b></td>
</tr>

<tr valign="top">
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></b></td>
</tr>
<tr>
<td colspan="2"><b>Activate Visibility Sensitive Completion</b> (<b><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#CODEASSIST_VISIBILITY_CHECK">CODEASSIST_VISIBILITY_CHECK</a></b>)</td>
</tr>
<tr valign="top">
<td rowspan="2">When enabled, completion doesn't propose elements that are not visible at the
insertion point according to Java visibility rules (e.g. the private methods of a super class are
not proposed).</td>
<td><b><a href="../reference/api/org/eclipse/jdt/core/JavaCore.html#ENABLED">ENABLED</a></b></td>

</tr>
<tr valign="top">
<td><b><i><a href=
"../reference/api/org/eclipse/jdt/core/JavaCore.html#DISABLED">DISABLED</a></i></b></td>
</tr>
</table>
</body>
</html>
