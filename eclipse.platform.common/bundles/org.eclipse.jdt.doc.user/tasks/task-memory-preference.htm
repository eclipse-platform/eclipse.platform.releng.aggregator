<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
  <head>
    <meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2007. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page." >
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
    <meta http-equiv="Content-Style-Type" content="text/css">
    <link rel="stylesheet" href="../book.css" charset="ISO-8859-1" type="text/css">
    <title>Memory view preferences</title>
  </head>
  
<body>

<h1>Memory View Preferences</h1>

  <p>You can set table rendering, codepage, and padded string preferences for memory renderings. In addition, you can modify the preferred behavior for resetting memory renderings.</p>

  <p>Memory view preference dialog boxes are opened from the Memory view down-arrow icon menu. To open the Memory view Preferences dialog box, click the Memory view down-arrow icon and select <strong>Preferences</strong> from the menu. To open the Memory view table renderings Preferences dialog box, click the Memory view down-arrow icon and select <strong>Table Renderings Preferences</strong> from the menu.</p><p>To restore any changes that you make in the preferences to their default settings, click <strong>Restore Defaults</strong>.</p>

  <h2>Preferences: Reset Memory Monitor</h2>

  <p>You can reset a rendering to the base address if you have moved away from it. When you reset a rendering to the base address, you can set it to reset only the visible renderings - or you can set it to reset all renderings. If you choose to reset all renderings, performance of the reset operation can be negatively impacted. To set this preference, open the Preferences dialog box and then select the <strong>Reset Memory Monitor</strong> node. In the Reset Memory Monitor page, choose the appropriate radio button.</p>

  <h2>Preferences: Padded String</h2>

  <p>The padded string is the string that will appear in memory contents when memory cannot be retrieved. To set the padded string, open the Preferences dialog box and select the <strong>Padded String</strong> node. In the Padded String page, specify the string that you want to display when memory contents cannot be determined.</p>

  <h2>Preferences: Select Codepages</h2>

  <p>When monitoring ASCII and EBCDIC text-based renderings (and mapped memory, if it is available in the product that you installed this debugger with) in the <strong>Renderings</strong> pane, you can set the codepage in which you want the rendering to be displayed.</p><p>To set the codepage for rendering memory to ASCII/EBCDIC, open the Preferences dialog box and select the <strong>Select Codepages</strong> node. In the Select Codepages page, specify the codepage of the character set that you want to change (for ASCII renderings, EBCDIC renderings, or both).</p>

  <h2>Table Renderings Preferences</h2>

  <p>To set preferences for memory renderings that are displayed in a table, click the Memory view down-arrow icon and select <strong>Table Renderings Preferences</strong>. In the resulting preferences dialog box, there are two options:</p>
  
  <ul>
    <li><strong>Automatic</strong> radio button: Select this if you want the debugger to automatically preload a buffer of memory before and after the visible region in the Memory view. When you select this setting, you can easily scroll away from the visible region of memory with scroll and page up/down actions.
      <p>If the buffer size is large, the performance of refreshing the Memory view can be negatively impacted (the Memory view refreshes when there is a potential for memory change - so, for example, the Memory view refreshes when you step, suspend after running, change a variable or register, or modify memory). This is because a request for more memory must be made from the debug engine for each refresh. On the other hand, if the buffer size is too small, the performance of scrolling can be negatively impacted. This is because a request for more memory must be made from the debug engine when the buffer is exhausted. Given this performance trade-off, you need to set this option to suit your needs.</p>
    </li>
    <li><strong>Manual</strong> radio button: If you select this setting, then the number of lines per page that you specify will be loaded into the <strong>Renderings</strong> pane. When using this setting, you have more control in choosing exactly what you want to monitor, however, you will not be able to scroll outside the buffer defined by this page size setting. Instead, to view memory from the next page or previous page, you must right-click to use the <strong>Previous Page</strong> and <strong>Next Page</strong> actions from the pop-up menu.
      <p>If the buffer size is large, the performance of refreshing the Memory view can be negatively impacted (the Memory view refreshes when there is a potential for memory change - so, for example, the Memory view refreshes when you step, suspend after running, change a variable or register, or modify memory). This is because a request for more memory must be made from the debug engine for each refresh.</p>
    </li>
  </ul>

</body>
</html>
