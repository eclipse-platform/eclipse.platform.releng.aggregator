<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<meta name="copyright" content="Copyright (c) IBM Corporation and others 2000, 2016. This page is made available under license. For full details see the LEGAL in the documentation book that contains this page.">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Java Content Assist Preferences</title>
<link rel="stylesheet" href="../../../../book.css" charset="ISO-8859-1" type="text/css">
<script language="JavaScript" src="PLUGINS_ROOT/org.eclipse.help/livehelp.js" type="text/javascript"> </script>
</head>
<body>
<h1>Java Content Assist Preferences</h1>
<p>Indicate your preferences for the Content Assist settings on the <a class="command-link" href='javascript:executeCommand("org.eclipse.ui.window.preferences(preferencePageId=org.eclipse.jdt.ui.preferences.CodeAssistPreferencePage)")'> <img src="PLUGINS_ROOT/org.eclipse.help/command_link.svg" alt="Opens the Content Assist preference page">
<b> Java &gt; Editor &gt; Content Assist </b></a> preference page.</p>
<table border="1" cellspacing="0" cellpadding="5" width="100%" summary="Content Assist settings">
	<thead>
		<tr>
			<th>
			<p>Option</p>
			</th>
			<th>
			<p>Description</p>
			</th>
			<th>
			<p>Default</p>
			</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td valign="top" colspan="3"><h2>Insertion</h2></td>
		</tr>
		<tr>
			<td valign="top">Completion inserts/Completion overwrites</td>
			<td valign="top">
			If <strong>Completion inserts</strong> is on, the completion text is inserted at the caret position, so it never overwrites any existing text. <br>
			If <strong>Completion overwrites</strong> is on, the completion text replaces the characters following the caret position until the end of the word.
			<p>Note that pressing <strong>Ctrl</strong> when applying a completion proposal toggles between the two insertion modes.</p>
			</td>
			<td valign="top">
			Completion overwrites
			</td>
		</tr>
		<tr>
			<td valign="top">Insert single proposals automatically</td>
			<td valign="top">
			If enabled, code assist will choose and insert automatically single proposals.
			</td>
			<td valign="top">
			On
			</td>
		</tr>
		<tr>
			<td valign="top">Insert common prefixes automatically</td>
			<td valign="top">
			If enabled, code assist will automatically insert the common prefix of all possible completions similar to Unix shell expansion. This can be used repeatedly, even while the code assist window is being displayed.
			</td>
			<td valign="top">
			Off
			</td>
		</tr>
		<tr>
			<td valign="top">Disable insertion triggers except 'Enter'</td>
			<td valign="top">
			If selected, the pre-defined trigger characters to insert a completion proposal will be ignored while typing. Here, the proposal can be inserted by pressing <strong>Enter</strong>.
			<p>Disabling insertion triggers is usually convenient to avoid insertion of undesired proposals when the content assist pop-up is shown too often. For example, when too many characters are used as triggers for auto activation of code assist.</p>
			</td>
			<td valign="top">
			Off
			</td>
		</tr>
		<tr>
			<td valign="top">Add import instead of qualified name</td>
			<td valign="top">
			If enabled, type proposals which are in other packages will invoke the addition of the corresponding import declaration. Otherwise, the type will be inserted fully qualified.
			</td>
			<td valign="top">
			On
			</td>
		</tr>
		<tr>
			<td valign="top" style="padding-left: 1em;">Use static imports</td>
			<td valign="top">
			If enabled, method proposals for static methods will invoke the addition of the corresponding static import declaration. Otherwise, a non static import for the declaring type will be added.
			<p>Add the method or type containing the method to the <a href="ref-preferences-content-assist-favorites.htm">Favorites</a> preference page to get a proposal for such methods.
			</p>
			</td>
			<td valign="top">
			On
			</td>
		</tr>
		<tr>
			<td valign="top">Fill method arguments and show guessed arguments</td>
			<td valign="top">
			If enabled, code assist will add argument when completing a method. It will also offer matching variables, fields or method invocations from the context where a method proposal is inserted.
			</td>
			<td valign="top">
			On
			</td>
		</tr>
		<tr>
			<td valign="top" style="padding-left: 1em;">Insert parameter names</td>
			<td valign="top">
			If selected, code assist will fill the arguments with the parameter names used in the method declaration.
			</td>
			<td valign="top">
			Off
			</td>
		</tr>
		<tr>
			<td valign="top" style="padding-left: 1em;">Insert best guessed arguments</td>
			<td valign="top">
			If selected, code assist will fill the arguments with the best matching variable, field or method invocation from the context where a method proposal is inserted.
			</td>
			<td valign="top">
			Off
			</td>
		</tr>
		
		<tr>
			<td valign="top" colspan="3"><h2>Sorting and Filtering</h2></td>
		</tr>
		<tr>
			<td valign="top" colspan="3">Configure <a href="../appearance/ref-preferences-type-filters.htm">Type Filters</a>.</td>
		</tr>
		<tr>
			<td valign="top">Sort proposals</td>
			<td valign="top">
			Select how the proposals should be sorted in the content assist pop up.
			</td>
			<td valign="top">
			by relevance
			</td>
		</tr>
		<tr>
			<td valign="top">Show camel case matches</td>
			<td valign="top">
			If enabled, camel case matches are displayed (i.e. NPE is expanded to NullPointerException).
			</td>
			<td valign="top">
			On
			</td>
		</tr>
		<tr>
			<td valign="top">Show substring matches</td>
			<td valign="top">
			If enabled, substring matches are displayed (i.e. completing on "selection" proposes "addSelectionListener").
			</td>
			<td valign="top">
			On
			</td>
		</tr>
		<tr>
			<td valign="top">Hide proposals not visible in the invocation context</td>
			<td valign="top">
			If enabled, the Java element proposals are limited by the rules of visibility. For example, private field proposals of other classes would not be displayed.
			</td>
			<td valign="top">
			On
			</td>
		</tr>
		<tr>
			<td valign="top">Hide deprecated references</td>
			<td valign="top">
			If enabled, references to deprecated Java elements are not displayed.
			</td>
			<td valign="top">
			Off
			</td>
		</tr>
		
		<tr>
			<td valign="top" colspan="3"><h2>Auto Activation</h2></td>
		</tr>
		<tr>
			<td valign="top">Enable auto activation</td>
			<td valign="top">
			If enabled, code assist can be invoked automatically.
			<p>The condition for automatic invocation is specified with the preferences <strong>Auto activation delay</strong>, <strong>Auto activation triggers for Java</strong> and <strong>Auto activation triggers for Javadoc</strong>.</p>
			</td>
			<td valign="top">
			On
			</td>
		</tr>
		<tr>
			<td valign="top">Auto activation delay</td>
			<td valign="top">
			The time in milliseconds after which code assist is triggered after an auto activation trigger character is encountered and no other character has been typed.
			</td>
			<td valign="top">200</td>
		</tr>
		<tr>
			<td valign="top">Auto activation triggers for Java</td>
			<td valign="top">
			If one of the trigger characters is typed inside Java source code (but not inside a Javadoc comment) and no other character is typed before the auto activation delay times out, the code assist is invoked.
			</td>
			<td valign="top">
			'.'
			</td>
		</tr>
		<tr>
			<td valign="top">Auto activation triggers for Javadoc</td>
			<td valign="top">
			If one of the trigger characters is typed inside a Java doc and no other character is typed before the auto activation delay times out, the code assist is invoked.
			</td>
			<td valign="top">
			'@#'
			</td>
		</tr>
	</tbody>
</table>
<h3 class="related">Related References</h3>
<a href="../../../../reference/ref-java-editor-code-assist.htm">Content/Code Assist</a><br>
<a href="../appearance/ref-preferences-type-filters.htm">Type Filters</a>
</body>
</html>
