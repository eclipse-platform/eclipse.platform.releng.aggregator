###############################################################################
# Copyright (c) 2025 Contributors to Eclipse Foundation
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# https://www.eclipse.org/legal/epl-2.0/.
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#     see git history
###############################################################################
name: Automatic Code Cleanups
on:
  workflow_call:
    inputs:
      author:
        description: Defines the committer / author that should be used for the commit
        required: true
        type: string
      bundle-folders:
        description: Defines the folders that should be scanned for bundles, must be a valid argument to the 'ls' command, defaults to 'bundles/*/'
        required: false
        default: 'bundles/*/'
        type: string
      do-cleanups:
        description: Configures if cleanup actions should be performed
        required: false
        default: false
        type: boolean
      do-quickfix:
        description: Configures if quickfix actions should be performed
        required: false
        default: false
        type: boolean
      do-manifest:
          description: Configures if organize manifest actions should be performed
          required: false
          default: false
          type: boolean
      branch: 
        description: 'The branch to clean'
        type: string
        required: false
        default: 'master'
      submodules:
        description: |
          Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules.
          When the `ssh-key` input is not provided, SSH URLs beginning with `git@github.com:` are converted to HTTPS.
          The value is just passed as it is to the github/actions/checkout action: https://github.com/actions/checkout#usage
        type: string
        required: false
        default: 'false'
      mavenVersion: 
        description: 'The version of Maven set up'
        type: string
        required: false
        default: '3.9.11'
    secrets:
      token:
        description: Personal Access Token to use for creating pull-requests
        required: true

jobs:
  list-bundles:
    runs-on: ubuntu-latest
    outputs:
      bundles: ${{ steps.list-bundles.outputs.bundles }}
    steps:
    - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      with:
        fetch-depth: 0
        ref: ${{ inputs.branch }}
        submodules: ${{ inputs.submodules }}
    - name: List all bundles
      id: list-bundles
      env:
          FOLDER_PATTERN: ${{ inputs.bundle-folders }}
      run: |
          directories=($(ls -d $FOLDER_PATTERN))
          directories=("${directories[@]%/}")
          json_array=()
          for dir in "${directories[@]}"; do
            if [ -e ${dir}/META-INF/MANIFEST.MF ]
            then
              json_array+=("\"$dir\"")
            fi
          done
          json_elements=$(IFS=,; echo "${json_array[*]}")
          json_output="{ \"bundles\": [$json_elements] }"
          echo "bundles=$json_output" | tee -a "$GITHUB_OUTPUT"

  clean-bundles:
    runs-on: ubuntu-latest
    name: Cleanup ${{ matrix.bundles }}
    if: always()
    needs: list-bundles
    strategy:
      matrix: ${{ fromJson(needs.list-bundles.outputs.bundles) }}
      max-parallel: 1
      fail-fast: false
    steps:
      - name: List number of open PRs
        id: list-prs
        run: |
            json_output=$(gh pr list -l 'cleanup' -R $OWNER/$REPO -L 20 --json id)
            echo "prs=$json_output" | tee -a "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.token }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        if: ${{ fromJson(steps.list-prs.outputs.prs)[9] == null }}
        with:
          fetch-depth: 0
          ref: ${{ inputs.branch }}
      - name: Set up Maven
        uses: stCarolas/setup-maven@d6af6abeda15e98926a57b5aa970a96bb37f97d1 # v5
        if: ${{ fromJson(steps.list-prs.outputs.prs)[9] == null }}
        with:
          maven-version: ${{ inputs.mavenVersion }}
      - name: Set up JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        if: ${{ fromJson(steps.list-prs.outputs.prs)[9] == null }}
        with:
          java-version: |
            8
            11
            17
            21
          distribution: 'temurin'
          cache: maven
      - name: Perform Cleanups on ${{ matrix.bundles }} 
        working-directory: ${{ matrix.bundles }}
        if: ${{ inputs.do-cleanups && fromJson(steps.list-prs.outputs.prs)[9] == null }}
        run: >-
          xvfb-run mvn -U -B -ntp tycho-cleancode:cleanup@cleanups
      - name: Perform QuickFixes on ${{ matrix.bundles }} 
        working-directory: ${{ matrix.bundles }}
        if: ${{ inputs.do-quickfix && fromJson(steps.list-prs.outputs.prs)[9] == null }}
        run: >-
          xvfb-run mvn -U -B -ntp -e tycho-cleancode:quickfix@quickfixes
      - name: Perform Organize Manifest on ${{ matrix.bundles }} 
        working-directory: ${{ matrix.bundles }}
        if: ${{ inputs.do-manifest && fromJson(steps.list-prs.outputs.prs)[9] == null }}
        run: >-
          xvfb-run mvn -U -B -ntp -e tycho-cleancode:manifest@manifest
      - name: Create final PR description
        working-directory: ${{ matrix.bundles }}/target
        if: ${{ hashFiles(format('{0}/target/quickfix.md', matrix.bundles)) != '' || hashFiles(format('{0}/target/cleanups.md', matrix.bundles)) != '' || hashFiles(format('{0}/target/organizeManifest.md', matrix.bundles)) != '' }} 
        run: >-
          cat *.md > pr.md
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        if: ${{ hashFiles(format('{0}/target/pr.md', matrix.bundles)) != '' }} 
        with:
          commit-message: Perform clean code of ${{ matrix.bundles }}
          branch: clean-code/${{ matrix.bundles }}
          title: Clean Code for ${{ matrix.bundles }}
          body-path: ${{ matrix.bundles }}/target/pr.md
          delete-branch: true
          draft: false
          labels: cleanup
          token: ${{ secrets.token }}
          committer: ${{ inputs.author }}
          author: ${{ inputs.author }}
          add-paths: |
            **/*.java
            **/*.MF
